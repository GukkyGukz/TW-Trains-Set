grf {
	grfid: "UK\01\01";
	name: string(STR_TWTS_NAME);
	desc: string(STR_TWTS_DESCRIPTION);
	version: 18;
	min_compatible_version: 0;


		//sprite length
		param 0 {
				param_spritelength {
						type: int;
						name: string(STR_PARAM_NAME_SPRITELENGTH);
						desc: string(STR_PARAM_DESC_SPRITELENGTH);
						min_value: 0;
						max_value: 1;
						def_value: 0;
						names: {
												0: string(STR_PARAM_LENGTH_12);
												1: string(STR_PARAM_LENGTH_10);
						};
				}
		}
		
}
//disable_item(FEAT_TRAINS);

//train look nice thing
traininfo_y_offset = 2;
train_width_32_px = 1;

cargotable {
    //DEFAULT
    PASS, COAL, MAIL, OIL_, LVST, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, 
    //TOYLAND
    SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, 
    //ECS
    AORE, BRCK, BDMT, CERA, CERE, CMNT, DYES, FERT, FICR, FISH, GLAS, LIME, OLSD, PETR, PLAS, POTA, RFPR, SAND, SULP, TOUR, VEHI, WDPR, WOOL, 
    //FIRS3, XIS
    METL, BEER, CLAY, COPR, ENSP, FMSP, GRVL, MILK, MNSP, PHOS, RCYC, SCMT, SGBT, SGCN, JAVA, CASS, NUTS, 
    EOIL, ACID, CHLO, ZINC, IRON, SASH, SALT, QLME, SLAG, MNO2, NITR, COKE, BEAN, PORE, PEAT, BOOM, KAOL, VPTS, VBOD, POWR, PIPE, 
    //FIRS 4
    CBLK, CSTI, CTAR, FECR, TYRE, COAT, LYE_, NH3_, O2__, SOAP, STAL, STCB, STSE, STSH, STST, STWR, VENG, 
    C2H4, ENUM, HYAC, MEOH, NAPH, PHAC, C3H6, SUAC, TEXT, TIN_, TINP, UREA, 
    //AXIS
    ALO_, ALUM, COCO, H2__, NHNO, PPAR, 
    //FIRS 5
    CCPR, CRAN, FOCA, HWAR, LFEQ, N7__, PPWK, PUMP, RBAR, STBR, STPP, STTP, SWRP, TYCO, WELD, 
    //OTIS
    FRVG, URAN, BAKE, CHSE, ELTR, FUEL, FURN, MEAT, MPTS, NKOR, OTI1, OTI2, OYST, PCL_, SEED, SESP, TWOD, TATO, 
    //ITI, IotC
    WDCH, SCPR, WSTE, OILI, OILD, CIGR, TBCO, COBL, NICK, MOLS, 
    //MISC
    NUKF, NUKW, NWST, YETI, YETY
    }
	

/* Define a rail type table,
 * this allows referring to railtypes
 * irrespective of the grfs loaded.
 */
railtypetable {
    RAIL, ELRL, MONO, MGLV, NABE, NABA, NAAN, NABN
}
//sort in depot //could change to item names instead of ID numbers

//variants should be sorted in order too so they show up correctly in replace window

sort(FEAT_TRAINS, [

//EL
item_e100, item_e200, e1000, item_e500,

//DH
dhl100,

//DE
r20, r100, r180, r200,

//SL

//DMU
dr2100, dr2700, dr2800, dr2900, dr3100, item_45dr1000,

//EMU
trmu_car, emu100, emu200, emu1200, emu300, emu400, emu500, emu600, emu700, emu800,

//TEMU
temu1000,

//PAXold
item_sp32400, item_sp32550, item_tp32200, item_tp32800,

//PAXnew
item_sp2300, item_sp32800, item_sp32850, item_fpk10000, item_fpk10100, item_fpk10200, item_ppcar,

//MAIL
item_pbk32800, item_pbk32850, item_pbk10400, item_pbk10500

//FREIGHT

//COMPATIBLE

]);

//Dual headed
template template_purchase_dualheaded(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [1  ,  1,  1,  1,   0,   0, "gfx/empty.png"]
    [1  ,  1,  1,  1,   0,   0, "gfx/empty.png"]
    [1     ,  1,  1,  1,   0,   0, "gfx/empty.png"]
    [1     ,  1,  1,  1,   0,   0, "gfx/empty.png"]
    [1     ,  1,  1,  1,   0,   0, "gfx/empty.png"]
    [1     ,  1,  1,  1,   0,   0, "gfx/empty.png"]
    [x    ,  y,  87, 18, -11, -8]
    [1    ,  1,  1,  1,   0,   0, "gfx/empty.png"]
}

template tmpl_empty() {
    [0,      0,  1, 1,  0, 0]
}

/* Basic template for 4 vehicle views */
template tmpl_vehicle_basic(x, y) {
    // arguments x, y: coordinates of top-left corner of first sprite
    [x,      y,  8, 24,  -3, -12] //xpos ypos xsize ysize xrel yrel
    [x +  9, y, 22, 20, -14, -12]
    [x + 32, y, 32, 16, -16, -12]
    [x + 65, y, 22, 20,  -6, -12]
}

/* Template for a vehicle with only 4 views (symmetric) */
template tmpl_vehicle_4_views(num) {
    // argument num: Index in the graphics file, assuming vertical ordering of vehicles
    tmpl_vehicle_basic(1, 1 + 32 * num)
}

/* Template for a vehicle with 8 views (non-symmetric) */
template tmpl_vehicle_8_views(num, reversed) {
    // argument num: Index in the graphics file, assuming vertical ordering of vehicles
    // argument reversed: Reverse visible orientation of vehicle, if set to 1
    tmpl_vehicle_basic(reversed ? 89 : 1, 1 + 32 * num)
    tmpl_vehicle_basic(reversed ? 1 : 89, 1 + 32 * num)
}
/* Template for a vehicle with 8 views, row 2 (non-symmetric) */
template tmpl_vehicle_8_views_2(num, reversed) {
    // argument num: Index in the graphics file, assuming vertical ordering of vehicles
    // argument reversed: Reverse visible orientation of vehicle, if set to 1
    tmpl_vehicle_basic(reversed ? 269 : 181, 1 + 32 * num)
    tmpl_vehicle_basic(reversed ? 181 : 269, 1 + 32 * num)
}



/* Template for a single vehicle sprite */
template tmpl_vehicle_single(num, xsize, ysize, xoff, yoff) {
    [1, 1 + 32 * num, xsize, ysize, xoff, yoff]
}

/* Dummy Template */

template template_dummy (x, y) {
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
}


/* EMU Templates */

/* 1212121212121212121212121212121212121212121212121212 */

template template_12_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		16,		-24,		-12]
    [ x+110,	y,		30,		29,		-10,		-19]
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		16,		-24,		-12]
    [ x+258,	y,		30,		29,		-10,		-19]
}

template template_12_cab_rev_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		16,		-24,		-12]
    [ x+258,	y,		30,		29,		-10,		-19]
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		16,		-24,		-12]
    [ x+110,	y,		30,		29,		-10,		-19]
}

template template_12_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		16,		-24,		-12]
    [ x+258,	y,		30,		29,		-10,		-19]
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		16,		-24,		-12]
    [ x+110,	y,		30,		29,		-10,		-19]
}

template template_12_cab_rev_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		16,		-24,		-12]
    [ x+110,	y,		30,		29,		-10,		-19]
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		16,		-24,		-12]
    [ x+258,	y,		30,		29,		-10,		-19]
}

/* 10101010101010101010101010101010101010101010101010 */

template template_10_standard_emu(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-21]
    [ x+16,		y,		26,		29,		-14,		-21]
    [ x+54,		y,		40,		16,		-20,		-12]
    [ x+110,	y,		26,		29,		-7,		    -20]
    [ x+148,	y,		8,		36,		-3,			-23]
    [ x+164,	y,		26,		29,		-17,		-20]
    [ x+202,	y,		40,		16,		-20,		-12]
    [ x+258,	y,		26,		29,		-8,		    -20]
}

template template_10_cab_rev_standard_emu(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-23]
    [ x+164,	y,		26,		29,		-13,		-21]
    [ x+202,	y,		40,		16,		-20,		-12]
    [ x+258,	y,		26,		29,		-4,		    -18]
    [ x,    	y,		8,		36,		-3,			-21]
    [ x+16, 	y,		26,		29,		-18,		-19]
    [ x+54, 	y,		40,		16,		-20,		-12]
    [ x+110,	y,		26,		29,		-7,		    -20]
}

template template_10_reversed_emu(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-23]
    [ x+164,	y,		26,		29,		-17,		-20]
    [ x+202,	y,		40,		16,		-20,		-12]
    [ x+258,	y,		26,		29,		-8,		    -20]
    [ x,    	y,		8,		36,		-3,			-21]
    [ x+16, 	y,		26,		29,		-18,		-19]
    [ x+54, 	y,		40,		16,		-20,		-12]
    [ x+110,	y,		26,		29,		-11,	    -22]
}

template template_10_cab_rev_reversed_emu(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-21]
    [ x+16,		y,		26,		29,		-16,		-20]
    [ x+54,		y,		40,		16,		-20,		-12]
    [ x+110,	y,		26,		29,		-7,		    -20]
    [ x+148,	y,		8,		36,		-3,			-23]
    [ x+164,	y,		26,		29,		-21,		-16]
    [ x+202,	y,		40,		16,		-18,		-15]
    [ x+258,	y,		26,		29,		-12,	    -21]
}


/* 888888888888888888888888888888888888888888888888888888 */


// Not Reversed
template template_8_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-20]
    [ x+20,		y,		22,		27,		-14,		-19]
    [ x+62,		y,		32,		16,		-16,		-12]
    [ x+114,	y,		22,		27,		-8, 		-20]
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+168,	y,		22,		27,		-14,		-19]
    [ x+210,	y,		32,		16,		-16,		-12]
    [ x+262,	y,		22,		27,		-8,		    -20]
}

template template_8_cab_rev_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+168,	y,		22,		27,		-14,		-19]
    [ x+210,	y,		32,		16,		-16,		-12]
    [ x+262,	y,		22,		27,		-8, 		-20]
    [ x,	    y,		8,		36,		-3,			-20]
    [ x+20,	    y,		22,		27,		-14,		-19]
    [ x+62,	    y,		32,		16,		-16,		-12]
    [ x+114,	y,		22,		27,		-8,		    -20]
}

template template_8_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+168,	y,		22,		27,		-14,		-19]
    [ x+210,	y,		32,		16,		-16,		-12]
    [ x+262,	y,		22,		27,		-8, 		-20]
    [ x,		y,		8,		36,		-3,			-20]
    [ x+20,		y,		22,		27,		-14,		-19]
    [ x+62,		y,		32,		16,		-16,		-12]
    [ x+114,	y,		22,		27,		-8,	    	-20]
}

template template_8_cab_rev_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,	    y,		8,		36,		-3,			-20]
    [ x+20,	    y,		22,		27,		-14,		-19]
    [ x+62,	    y,		32,		16,		-16,		-12]
    [ x+114,	y,		22,		27,		-8, 		-20]
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+168,	y,		22,		27,		-14,		-19]
    [ x+210,	y,		32,		16,		-16,		-12]
    [ x+262,	y,		22,		27,		-8,	    	-20]
}

template template_2_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		16,		-3,			-14]		// |
    [ x+16,		y,		10,		16,		-6,		-12]		// /
    [ x+54,		y,		8,		16,		6,		-12]	// >
    [ x+110,	y,		10,		16,		8,			-7]		// \
    [ x+148,	y,		8,		16,		-3,			-4]		// |
    [ x+164,	y,		10,		16,		-16,		-7]		// /
    [ x+202,	y,		8,		16,		-14,		-12]	// <
    [ x+258,	y,		10,		16,		-2,		-12]		// \
}

template template_2_cab_rev_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		16,		-3,			-14]		// V
    [ x+164,	y,		10,		16,		-6,		-12]		// /
    [ x+202,	y,		8,		16,		6,		-12]	// <
    [ x+258,	y,		10,		16,		8,			-7]		// \
	[ x,		y,		8,		16,		-3,			-4]		// /\
    [ x+16,		y,		10,		16,		-16,		-7]		// /
    [ x+54,		y,		8,		16,		-14,		-12]	// >
    [ x+110,	y,		10,		16,		-2,		-12]		// \
    
}

template template_2_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		16,		-3,			-12]
    [ x+164,	y,		10,		16,		-6,			-12]
    [ x+202,	y,		8,		16,		6,			-12]
    [ x+258,	y,		10,		16,		8,			-7]
	[ x,		y,		8,		16,		-3,			-6]
    [ x+16,		y,		10,		16,		-16,		-7]
    [ x+54,		y,		8,		16,		-14,		-12]	
    [ x+110,	y,		10,		16,		-2,			-12]
   
}

template template_2_cab_rev_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
	[ x,		y,		8,		16,		-3,			-12]
    [ x+16,		y,		10,		16,		-6,			-12]
    [ x+54,		y,		8,		16,		6,			-12]
    [ x+110,	y,		10,		16,		8,			-7]
	[ x+148,	y,		8,		16,		-3,			-6]
    [ x+164,	y,		10,		16,		-16,		-7]
    [ x+202,	y,		8,		16,		-14,		-12]
    [ x+258,	y,		10,		16,		-2,			-12]
}

template template_12_on_2_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-22]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		16,		-18,		-12]
    [ x+110,	y,		30,		29,		-4,			-16]
    [ x+148,	y,		8,		36,		-3,			-16]
    [ x+164,	y,		30,		29,		-24,		-16]
    [ x+202,	y,		48,		16,		-30,		-12]
    [ x+258,	y,		30,		29,		-10,		-19]
}

template template_12_on_2_cab_rev_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-22]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		16,		-18,		-12]
    [ x+258,	y,		30,		29,		-4,			-16]
    [ x,		y,		8,		36,		-3,			-16]
    [ x+16,		y,		30,		29,		-24,		-16]
    [ x+54,		y,		48,		16,		-30,		-12]
    [ x+110,	y,		30,		29,		-10,		-19]
}


template template_12_on_2_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		16,		-18,		-12]
    [ x+258,	y,		30,		29,		-4,			-16]
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-24,		-16]
    [ x+54,		y,		48,		16,		-30,		-12]
    [ x+110,	y,		30,		29,		-10,		-19]
}

template template_12_on_2_cab_rev_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-20]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		16,		-18,		-12]
    [ x+110,	y,		30,		29,		-4,			-16]
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-24,		-16]
    [ x+202,	y,		48,		16,		-30,		-12]
    [ x+258,	y,		30,		29,		-10,		-19]
}

template template_10_on_2_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-22]
    [ x+16,		y,		26,		29,		-18,		-19]
    [ x+54,		y,		40,		16,		-18,		-12]
    [ x+110,	y,		26,		29,		-4,			-18]
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+164,	y,		26,		29,		-20,		-18]
    [ x+202,	y,		40,		16,		-22,		-12]
    [ x+258,	y,		26,		29,		-6,			-19]
}

template template_10_on_2_cab_rev_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-22]
    [ x+164,	y,		26,		29,		-18,		-19]
    [ x+202,	y,		40,		16,		-18,		-12]
    [ x+258,	y,		26,		29,		-4,			-18]
    [ x,		y,		8,		36,		-3,			-20]
    [ x+16,		y,		26,		29,		-20,		-18]
    [ x+54,		y,		40,		16,		-22,		-12]
    [ x+110,	y,		26,		29,		-6,			-19]
}


template template_10_on_2_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+164,	y,		26,		29,		-18,		-19]
    [ x+202,	y,		40,		16,		-18,		-12]
    [ x+258,	y,		26,		29,		-4,			-18]
    [ x,		y,		8,		36,		-3,			-20]
    [ x+16,		y,		26,		29,		-20,		-18]
    [ x+54,		y,		40,		16,		-22,		-12]
    [ x+110,	y,		26,		29,		-6,			-19]
}

template template_10_on_2_cab_rev_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-20]
    [ x+16,		y,		26,		29,		-18,		-19]
    [ x+54,		y,		40,		16,		-18,		-12]
    [ x+110,	y,		26,		29,		-4,			-18]
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+164,	y,		26,		29,		-20,		-18]
    [ x+202,	y,		40,		16,		-22,		-12]
    [ x+258,	y,		26,		29,		-6,			-19]
}

template template_8_on_2_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-22]
    [ x+20,		y,		22,		27,		-18,		-17]
    [ x+62,		y,		32,		16,		-18,		-12]
    [ x+114,	y,		22,		27,		-4,			-18]
    [ x+148,	y,		8,		36,		-3,			-24]
    [ x+168,	y,		22,		27,		-16,		-18]
    [ x+210,	y,		32,		16,		-14,		-12]
    [ x+262,	y,		22,		27,		-2,			-17]
}

template template_8_on_2_cab_rev_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-22]
    [ x+168,	y,		22,		27,		-18,		-17]
    [ x+210,	y,		32,		16,		-18,		-12]
    [ x+262,	y,		22,		27,		-4,			-18]
    [ x,		y,		8,		36,		-3,			-24]
    [ x+20,		y,		22,		27,		-16,		-18]
    [ x+62,		y,		32,		16,		-14,		-12]
    [ x+114,	y,		22,		27,		-2,			-17]
}

template template_8_on_2_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-20]
    [ x+168,	y,		22,		27,		-18,		-17]
    [ x+210,	y,		32,		16,		-16,		-12]
    [ x+262,	y,		22,		27,		-4,			-18]
    [ x,		y,		8,		36,		-3,			-24]
    [ x+20,		y,		22,		27,		-16,		-18]
    [ x+62,		y,		32,		16,		-14,		-12]
    [ x+114,	y,		22,		27,		-2,			-17]
}

template template_8_on_2_cab_rev_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-20]
    [ x+20,		y,		22,		27,		-18,		-17]
    [ x+62,		y,		32,		16,		-16,		-12]
    [ x+114,	y,		22,		27,		-4,			-18]
    [ x+148,	y,		8,		36,		-3,			-24]
    [ x+168,	y,		22,		27,		-16,		-18]
    [ x+210,	y,		32,		16,		-14,		-12]
    [ x+262,	y,		22,		27,		-2,			-17]
}
// End template
/* Begin Functions */

switch (FEAT_TRAINS, PARENT, func_is_reversed, vehicle_is_reversed) {return;}

switch (FEAT_TRAINS, PARENT, NumberCarsInConsist, num_vehs_in_consist / 3) {return;}

/* LENGTHS */

// Standard 2-8-2 Length
    switch (FEAT_TRAINS, SELF, sw_length_2_8_2, position_in_articulated_veh % 3) {
        1: return 8;
        return 2;
    }

// Standard 1-8-1 Length
    switch (FEAT_TRAINS, SELF, sw_length_1_8_1, position_in_articulated_veh % 3) {
        1: return 8;
        return 1;
    }

// Standard 1-6-1 Length
    switch (FEAT_TRAINS, SELF, sw_length_1_6_1, position_in_articulated_veh % 3) {
        1: return 6;
        return 1;
    }

switch (FEAT_TRAINS, SELF, sw_param_length, param_spritelength) {
        1: sw_length_1_8_1;		    // Length 10
        sw_length_2_8_2;			// Length 12
    }

/* End Functions */ 
 // begin dummy

 // https://www.tt-forums.net/viewtopic.php?f=68&t=53511

spriteset (dummy_sprites, "gfx/empty.png")
{
  [0, 0, 2, 2, 0, 0, CROP]
}

 // end dummy


spriteset(spriteset_e100_orange, "gfx/e100.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_e100_white, "gfx/e100.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_e100_purchase, "gfx/e100.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_e100_livery, cargo_subtype) {
    0: spriteset_e100_orange;
    1: spriteset_e100_white;
}

switch(FEAT_TRAINS, SELF, switch_e100_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_ORANGE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_e100) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_E100);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1976, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       6;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABE; // from rail type table
        power:                        2052 kW; // Changed by CB
        running_cost_base:            RUNNING_COST_ELECTRIC;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       72 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_e100_subtype_text;
  default: switch_e100_livery;
  purchase: spriteset_e100_purchase;
  }
}

spriteset(spriteset_e200_cc, "gfx/e200.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_e200_orange, "gfx/e200.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_e200_black, "gfx/e200.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_e200_cc_mid, "gfx/e200.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_e200_orange_mid, "gfx/e200.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_e200_black_mid, "gfx/e200.png") {
    tmpl_vehicle_8_views(3, 0)
}
spriteset(spriteset_e200_purchase, "gfx/e200.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_e200_livery, cargo_subtype) {
    0: spriteset_e200_orange;
    1: spriteset_e200_black;
    2: spriteset_e200_cc;
}

switch(FEAT_TRAINS, SELF, switch_e200_livery_mid, cargo_subtype) {
    0: spriteset_e200_orange_mid;
    1: spriteset_e200_black_mid;
    2: spriteset_e200_cc_mid;
}

switch(FEAT_TRAINS, SELF, switch_e200_lightb, position_in_consist_from_end) {
    0: switch_e200_livery;
    switch_e200_livery_mid;
}

switch(FEAT_TRAINS, SELF, switch_e200_lightf, position_in_consist) {
    0: switch_e200_livery;
    switch_e200_lightb;
}

switch(FEAT_TRAINS, SELF, switch_e200_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_ORANGE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_MINGRI),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                  
                                 );
    2: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_e200) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_E200);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1978, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       7;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABE; // from rail type table
        power:                        2800 kW; // Changed by CB
        running_cost_base:            RUNNING_COST_ELECTRIC;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       96 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_e200_subtype_text;
  default: switch_e200_lightf;
  purchase: spriteset_e200_purchase;
  }
}

spriteset(spriteset_e1000, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_e1000_flip, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_e1000_green, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(6, 0)
}

spriteset(spriteset_e1000_flip_green, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(7, 1)
}

spriteset(spriteset_e1000_purchase, "gfx/pp2000.png") {
    template_purchase_dualheaded(4, 255)
}
/* --- Graphics callback  --- */

switch(FEAT_TRAINS, SELF, switch_e1000_gfx, cargo_subtype) {
    0: spriteset_e1000;
    1: spriteset_e1000_green;
}

switch(FEAT_TRAINS, SELF, switch_e1000_flip_gfx, cargo_subtype) {
    0: spriteset_e1000_flip;
    1: spriteset_e1000_flip_green;
}

switch(FEAT_TRAINS, SELF, switch_e1000_gfx_pos, position_in_consist) {
    0: switch_e1000_gfx;
    switch_e1000_flip_gfx;
}

switch(FEAT_TRAINS, SELF, switch_e1000_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_ORANGE)
                                    )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_GREEN), 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
       return CB_RESULT_NO_TEXT;
    }


/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_e1000_attach_vehid, vehicle_type_id) {
    item_ppcar: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_PPCAR_ERROR);
}


/* Define the actual train */
item(FEAT_TRAINS, e1000) {
    property {
        name:                         string(STR_NAME_E1000);
        introduction_date:            date(1996, 11, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 30;
        reliability_decay:            18;

        cargo_capacity:               1;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        131 km/h;
        track_type:                   NABE;
        power:                        1743 kW;
        weight:                       60 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 7;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 0;
        cargo_subtype_text: switch_e1000_subtype_text;
        default:                switch_e1000_gfx_pos;
            purchase:               spriteset_e1000_purchase;
            can_attach_wagon:       switch_e1000_attach_vehid;
    }
}

spriteset(spriteset_e500_orange, "gfx/e500.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_e500_cc, "gfx/e500.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_e500_purchase, "gfx/e500.png") {
    tmpl_vehicle_single(3, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_e500_livery, cargo_subtype) {
    0: spriteset_e500_orange;
    1: spriteset_e500_cc;
}

switch(FEAT_TRAINS, SELF, switch_e500_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_ORANGE), 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
    1: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_e500) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_E500);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(2024, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        131 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABE; // from rail type table
        power:                        3888 kW; // Changed by CB
        running_cost_base:            RUNNING_COST_ELECTRIC;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       96 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_e500_subtype_text;
  default: switch_e500_livery;
  purchase: spriteset_e500_purchase;
  }
}


spriteset(spriteset_dhl100_orange, "gfx/dhl100.png") {
    tmpl_vehicle_8_views(0, 0)
}

//Spriteset flipped
spriteset(spriteset_dhl100_flip_orange, "gfx/dhl100.png") {
    tmpl_vehicle_8_views_2(0, 1)
}


//purchase

spriteset(spriteset_dhl100_orange_purchase, "gfx/dhl100.png") {
    tmpl_vehicle_single(3, 87, 16, -25, -8)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_dhl100_flip_orange, vehicle_is_flipped) {
    0: spriteset_dhl100_orange;
    1: spriteset_dhl100_flip_orange;
}


item (FEAT_TRAINS, dhl100) {

property {
        name:                         string(STR_NAME_DHL100);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(2002, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 60;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       6;
        speed:                        75 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABN; // from rail type table
        power:                        1200 hp; // Changed by CB
        running_cost_base:            RUNNING_COST_DIESEL;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       60 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1.5; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }


  graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SHG),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  default: switch_dhl100_flip_orange;
  purchase: spriteset_dhl100_orange_purchase;
  }
}


spriteset(spriteset_r20_blue, "gfx/r20.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_r20_orange, "gfx/r20.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_r20_cc, "gfx/r20.png") {
    tmpl_vehicle_8_views(2, 0)
}

//Spriteset flipped
spriteset(spriteset_r20_flip_blue, "gfx/r20.png") {
    tmpl_vehicle_8_views_2(0, 1)
}

spriteset(spriteset_r20_flip_orange, "gfx/r20.png") {
    tmpl_vehicle_8_views_2(1, 1)
}

spriteset(spriteset_r20_flip_cc, "gfx/r20.png") {
    tmpl_vehicle_8_views_2(2, 1)
}


//purchase

spriteset(spriteset_r20_blue_purchase, "gfx/r20.png") {
    tmpl_vehicle_single(3, 87, 16, -25, -8)
}

spriteset(spriteset_r20_orange_purchase, "gfx/r20.png") {
    tmpl_vehicle_single(4, 87, 16, -25, -8)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_r20_flip_blue, vehicle_is_flipped) {
    0: spriteset_r20_blue;
    1: spriteset_r20_flip_blue;
}

switch(FEAT_TRAINS, SELF, switch_r20_flip_orange, vehicle_is_flipped) {
    0: spriteset_r20_orange;
    1: spriteset_r20_flip_orange;
}

switch(FEAT_TRAINS, SELF, switch_r20_flip_cc, vehicle_is_flipped) {
    0: spriteset_r20_cc;
    1: spriteset_r20_flip_cc;
}

switch(FEAT_TRAINS, SELF, switch_r20_yeardep_livery, build_year) {
    0..1979: switch_r20_flip_blue;
    1980..9999: switch_r20_flip_orange;
    switch_r20_flip_orange;
}

switch(FEAT_TRAINS, SELF, switch_r20_livery, cargo_subtype) {
    1: switch_r20_flip_blue;
    2: switch_r20_flip_orange;
    3: switch_r20_flip_cc;    
    switch_r20_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_r20_subtype_text, cargo_subtype) {
    0: return string(STR_SUFFIX_YEARDEP);
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_NVBLUE)
                                    )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    3: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }


switch (FEAT_TRAINS, SELF, switch_r20_purchase, current_year) {
    0..1979: spriteset_r20_blue_purchase;
    spriteset_r20_orange_purchase;
    }


item (FEAT_TRAINS, r20) {

property {
        name:                         string(STR_NAME_R20);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1960, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 60;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       6;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABN; // from rail type table
        power:                        1425 hp; // Changed by CB
        running_cost_base:            RUNNING_COST_DIESEL;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       78 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1.5; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }


  graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_r20_subtype_text;
  default: switch_r20_livery;
  purchase: switch_r20_purchase;
  }
}

spriteset(spriteset_r100_blue, "gfx/r100.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_r100_orange, "gfx/r100.png") {
    tmpl_vehicle_8_views(1, 0)
}

//Spriteset flipped
spriteset(spriteset_r100_flip_blue, "gfx/r100.png") {
    tmpl_vehicle_8_views_2(0, 1)
}

spriteset(spriteset_r100_flip_orange, "gfx/r100.png") {
    tmpl_vehicle_8_views_2(1, 1)
}


//purchase

spriteset(spriteset_r100_blue_purchase, "gfx/r100.png") {
    tmpl_vehicle_single(3, 87, 16, -25, -8)
}

spriteset(spriteset_r100_orange_purchase, "gfx/r100.png") {
    tmpl_vehicle_single(4, 87, 16, -25, -8)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_r100_flip_blue, vehicle_is_flipped) {
    0: spriteset_r100_blue;
    1: spriteset_r100_flip_blue;
}

switch(FEAT_TRAINS, SELF, switch_r100_flip_orange, vehicle_is_flipped) {
    0: spriteset_r100_orange;
    1: spriteset_r100_flip_orange;
}


switch(FEAT_TRAINS, SELF, switch_r100_yeardep_livery, build_year) {
    0..1979: switch_r100_flip_blue;
    1980..9999: switch_r100_flip_orange;
    switch_r100_flip_orange;
}

switch(FEAT_TRAINS, SELF, switch_r100_livery, cargo_subtype) {
    1: switch_r100_flip_blue;
    2: switch_r100_flip_orange;
    switch_r100_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_r100_subtype_text, cargo_subtype) {
    0: return string(STR_SUFFIX_YEARDEP);
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_NVBLUE)
                                    )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
       return CB_RESULT_NO_TEXT;
    }


switch (FEAT_TRAINS, SELF, switch_r100_purchase, current_year) {
    0..1979: spriteset_r100_blue_purchase;
    spriteset_r100_orange_purchase;
    }


item (FEAT_TRAINS, r100) {

property {
        name:                         string(STR_NAME_R100);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1969, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 60;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       6;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABN; // from rail type table
        power:                        1650 hp; // Changed by CB
        running_cost_base:            RUNNING_COST_DIESEL;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       78 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1.5; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }


  graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_r100_subtype_text;
  default: switch_r100_livery;
  purchase: switch_r100_purchase;
  }
}

spriteset(spriteset_r180_orange, "gfx/r180.png") {
    tmpl_vehicle_8_views(0, 0)
}

//Spriteset flipped
spriteset(spriteset_r180_flip_orange, "gfx/r180.png") {
    tmpl_vehicle_8_views_2(0, 1)
}


//purchase

spriteset(spriteset_r180_orange_purchase, "gfx/r180.png") {
    tmpl_vehicle_single(3, 87, 16, -25, -8)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_r180_flip_orange, vehicle_is_flipped) {
    0: spriteset_r180_orange;
    1: spriteset_r180_flip_orange;
}


item (FEAT_TRAINS, r180) {

property {
        name:                         string(STR_NAME_R180);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1992, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 60;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       6;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABN; // from rail type table
        power:                        1650 hp; // Changed by CB
        running_cost_base:            RUNNING_COST_DIESEL;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       88 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1.5; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }


  graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  default: switch_r180_flip_orange;
  purchase: spriteset_r180_orange_purchase;
  }
}

spriteset(spriteset_r200, "gfx/r200.png") {
    tmpl_vehicle_8_views(0, 0)
}


//purchase

spriteset(spriteset_r200_purchase, "gfx/r200.png") {
    tmpl_vehicle_single(3, 87, 16, -25, -8)
}


item (FEAT_TRAINS, r200) {

property {
        name:                         string(STR_NAME_R200);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(2023, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 60;
        reliability_decay:            20;
        cost_factor:                  45;
        running_cost_factor:          100; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        121 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NABN; // from rail type table
        power:                        2700 hp; // Changed by CB
        running_cost_base:            RUNNING_COST_DIESEL;
        cargo_capacity:               1;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       96 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        // 6/6 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 1.5; // changed by callback
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }


  graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 0;
  default: spriteset_r200;
  purchase: spriteset_r200_purchase;
  }
}


/*---GFX: Spritesets---*/
spriteset(spriteset_trmu_car, "gfx/trmu_car.png") {
    tmpl_vehicle_4_views(0)
}
spriteset(spriteset_trmu_car_add, "gfx/trmu_car.png") {
    tmpl_vehicle_4_views(1)
}
spriteset(spriteset_trmu_car_purchase, "gfx/trmu_car.png") {
    tmpl_vehicle_4_views(0)
}

switch (FEAT_TRAINS, SELF, sw_trmucar_end_articulated_part, extra_callback_info1) {
		1 .. 2: return trmu_car;									
		return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
	}

item(FEAT_TRAINS, trmu_car) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_TRMUCAR);
        introduction_date: date(1800,1,1);
        climates_available: ALL_CLIMATES;
                model_life: VEHICLE_NEVER_EXPIRES;
                vehicle_life: 60;
                loading_speed: 0;
                cost_factor: 64;
                running_cost_factor: 6;
                speed: 0 km/h;
                power: 0 hp;
                cargo_capacity: 1;
                weight: 0 ton;
                tractive_effort_coefficient: 0.3;
                air_drag_coefficient: 0;
                reliability_decay: 20;
                refittable_cargo_classes: bitmask(CC_PASSENGERS);
                cargo_age_period: 185;
                refit_cost: 0;
                track_type: NAAN;
                ai_special_flag: AI_FLAG_PASSENGER;
                running_cost_base: RUNNING_COST_DIESEL;
                engine_class: ENGINE_CLASS_STEAM;
                visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
                sprite_id: SPRITE_ID_NEW_TRAIN;
                dual_headed: 0;
                length: 8;
                extra_power_per_wagon: 0;
                bitmask_vehicle_info: 0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        purchase:                     spriteset_trmu_car_purchase;
    additional_text:                    return string(TRMUCAR_DESC);
    //can_attach_wagon:           set_mu_car_noattach_vehid;
    spriteset_trmu_car;
    }
}


spriteset(spriteset_dr2100_blue, "gfx/dr2300.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_dr2100_blue_rear, "gfx/dr2300.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_dr2100_blue_flip, "gfx/dr2300.png") {
    tmpl_vehicle_8_views(0, 1)
}

spriteset(spriteset_dr2100_blue_purchase, "gfx/dr2300.png") {
    template_purchase_dualheaded(0, 159)
}
/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_dr2100_blue_pos, position_in_consist) {
    0: spriteset_dr2100_blue;
    spriteset_dr2100_blue_flip;
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr2100_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, dr2100) {
    property {
        name:                         string(STR_NAME_DR2100);
        introduction_date:            date(1957, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 55;
        reliability_decay:            18;

        cargo_capacity:               66;
        loading_speed:                5;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        90 km/h;
        track_type:                   NABN;
        power:                        200 hp;
        weight:                       28 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  0;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_DIESEL;
        engine_class:                 ENGINE_CLASS_DIESEL;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_dr2100_blue_pos;
            purchase:               spriteset_dr2100_blue_purchase;
        can_attach_wagon:             switch_dr2100_attach_vehid;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      spriteset_dr2100_blue;
        cargo_capacity:               66;
        loading_speed:                15;
        power: 200;
        weight: 28;
      }
}

spriteset(spriteset_dr2700_silver, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_dr2750, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_dr2700_silver_rear, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_dr2700_silver_flip, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_dr2700_yellow, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_dr2700_yellow_rear, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_dr2700_yellow_flip, "gfx/dr2700.png") {
    tmpl_vehicle_8_views(1, 1)
}

spriteset(spriteset_dr2700_silver_purchase, "gfx/dr2700.png") {
    template_purchase_dualheaded(0, 191)
}

spriteset(spriteset_dr2700_yellow_purchase, "gfx/dr2700.png") {
    template_purchase_dualheaded(0, 159)
}
/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_dr2700_silver_end, position_in_vehid_chain_from_end) {
    0: spriteset_dr2700_silver;
    spriteset_dr2700_silver_rear;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_yellow_end, position_in_vehid_chain_from_end) {
    0: spriteset_dr2700_yellow;
    spriteset_dr2700_yellow_rear;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_silver_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_dr2750;
    1: switch_dr2700_silver_end;
    2: spriteset_dr2700_silver;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_yellow_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_dr2750;
    1: switch_dr2700_yellow_end;
    2: spriteset_dr2700_yellow;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_silver_pos, position_in_consist) {
    0: spriteset_dr2700_silver;
    spriteset_dr2700_silver_flip;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_yellow_pos, position_in_consist) {
    0: spriteset_dr2700_yellow;
    spriteset_dr2700_yellow_flip;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_gfx_yeardep_livery, build_year) {
    0..1979: switch_dr2700_silver_pos;
    1980..2013: switch_dr2700_yellow_pos;
    switch_dr2700_silver_pos;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_mucar_yeardep_livery, build_year) {
    0..1979: switch_dr2700_silver_mucar_pos;
    1980..2013: switch_dr2700_yellow_mucar_pos;
    switch_dr2700_silver_mucar_pos;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_livery, cargo_subtype) {
    1: switch_dr2700_silver_pos;
    2: switch_dr2700_yellow_pos;   
    switch_dr2700_gfx_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_dr2700_mucar_livery, cargo_subtype) {
    1: switch_dr2700_silver_mucar_pos;
    2: switch_dr2700_yellow_mucar_pos;   
    switch_dr2700_mucar_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_dr2700_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_SILVER)
                                    )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_YELLOW)
                                     )
                                 );
       return CB_RESULT_NO_TEXT;
    }


switch (FEAT_TRAINS, SELF, switch_dr2700_purchase, current_year) {
    0..1979: spriteset_dr2700_silver_purchase;
    1980..2013: spriteset_dr2700_yellow_purchase;
    spriteset_dr2700_silver_purchase;
    }

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr2700_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, dr2700) {
    property {
        name:                         string(STR_NAME_DR2700);
        introduction_date:            date(1966, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 55;
        reliability_decay:            18;

        cargo_capacity:               60;
        loading_speed:                5;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABN;
        power:                        150 hp;
        weight:                       35 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_DIESEL;
        engine_class:                 ENGINE_CLASS_DIESEL;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_dr2700_livery;
            purchase:               switch_dr2700_purchase;
        can_attach_wagon:             switch_dr2700_attach_vehid;
        cargo_subtype_text: switch_dr2700_subtype_text;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_dr2700_mucar_livery;
        cargo_capacity:               60;
        loading_speed:                5;
        power: 112;
        weight: 35;
      }
}

spriteset(spriteset_dr2800_yellow, "gfx/dr2800.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_dr2800_yellow_rear, "gfx/dr2800.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_dr2800_yellow_flip, "gfx/dr2800.png") {
    tmpl_vehicle_8_views(1, 1)
}

spriteset(spriteset_dr2850_yellow, "gfx/dr2800.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_dr2800_yellow_purchase, "gfx/dr2800.png") {
    template_purchase_dualheaded(0, 159)
}
/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_dr2800_yellow_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_dr2850_yellow;
    1: spriteset_dr2800_yellow_rear;
    2: spriteset_dr2800_yellow;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_dr2800_yellow_pos, position_in_consist) {
    0: spriteset_dr2800_yellow;
    spriteset_dr2800_yellow_flip;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr2800_start_stop, num_vehs_in_consist) {
    3: return CB_RESULT_NO_TEXT;
    6: return CB_RESULT_NO_TEXT;
    9: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    15: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr2800_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, dr2800) {
    property {
        name:                         string(STR_NAME_DR2800);
        introduction_date:            date(1982, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 55;
        reliability_decay:            18;

        cargo_capacity:               38;
        loading_speed:                10;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABN;
        power:                        350 hp;
        weight:                       38 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_DIESEL;
        engine_class:                 ENGINE_CLASS_DIESEL;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_5T, 3, 6, 9, 12, 15),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_dr2800_yellow_pos;
            purchase:               spriteset_dr2800_yellow_purchase;
        can_attach_wagon:             switch_dr2800_attach_vehid;
        start_stop:              switch_dr2800_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_dr2800_yellow_mucar_pos;
        cargo_capacity:               46;
        loading_speed:                10;
        power: 350;
        weight: 38;
      }
}

spriteset(spriteset_dr2900_yellow, "gfx/dr2900.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_dr2900_yellow_rear, "gfx/dr2900.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_dr2900_yellow_flip, "gfx/dr2900.png") {
    tmpl_vehicle_8_views(1, 1)
}

spriteset(spriteset_dr2950_yellow, "gfx/dr2900.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_dr2900_yellow_purchase, "gfx/dr2900.png") {
    template_purchase_dualheaded(0, 159)
}
/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_dr2900_yellow_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_dr2950_yellow;
    1: spriteset_dr2900_yellow_rear;
    2: spriteset_dr2900_yellow;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_dr2900_yellow_pos, position_in_consist) {
    0: spriteset_dr2900_yellow;
    spriteset_dr2900_yellow_flip;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr2900_start_stop, num_vehs_in_consist) {
    3: return CB_RESULT_NO_TEXT;
    6: return CB_RESULT_NO_TEXT;
    9: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    15: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr2900_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, dr2900) {
    property {
        name:                         string(STR_NAME_DR2900);
        introduction_date:            date(1987, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 55;
        reliability_decay:            18;

        cargo_capacity:               50;
        loading_speed:                10;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABN;
        power:                        350 hp;
        weight:                       38 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_DIESEL;
        engine_class:                 ENGINE_CLASS_DIESEL;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_5T, 3, 6, 9, 12, 15),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_dr2900_yellow_pos;
            purchase:               spriteset_dr2900_yellow_purchase;
        can_attach_wagon:             switch_dr2900_attach_vehid;
        start_stop:              switch_dr2900_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_dr2900_yellow_mucar_pos;
        cargo_capacity:               52;
        loading_speed:                10;
        power: 350;
        weight: 38;
      }
}

spriteset(spriteset_dr3100_yellow, "gfx/dr3100.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_dr3100_yellow_rear, "gfx/dr3100.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_dr3100_yellow_flip, "gfx/dr3100.png") {
    tmpl_vehicle_8_views(1, 1)
}

spriteset(spriteset_dr3150_yellow, "gfx/dr3100.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_dr3100_yellow_purchase, "gfx/dr3100.png") {
    template_purchase_dualheaded(0, 159)
}
/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_dr3100_yellow_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_dr3150_yellow;
    1: spriteset_dr3100_yellow_rear;
    2: spriteset_dr3100_yellow;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_dr3100_yellow_pos, position_in_consist) {
    0: spriteset_dr3100_yellow;
    spriteset_dr3100_yellow_flip;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr3100_start_stop, num_vehs_in_consist) {
    3: return CB_RESULT_NO_TEXT;
    6: return CB_RESULT_NO_TEXT;
    9: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    15: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_dr3100_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, dr3100) {
    property {
        name:                         string(STR_NAME_DR3100);
        introduction_date:            date(1998, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 55;
        reliability_decay:            18;

        cargo_capacity:               46;
        loading_speed:                15;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABN;
        power:                        350 hp;
        weight:                       45 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_DIESEL;
        engine_class:                 ENGINE_CLASS_DIESEL;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_5T, 3, 6, 9, 12, 15),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_dr3100_yellow_pos;
            purchase:               spriteset_dr3100_yellow_purchase;
        can_attach_wagon:             switch_dr3100_attach_vehid;
        start_stop:              switch_dr3100_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_dr3100_yellow_mucar_pos;
        cargo_capacity:               52;
        loading_speed:                15;
        power: 350;
        weight: 45;
      }
}

spriteset(spriteset_45dr1000_yellow, "gfx/45dr1000.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_45dr1000_yellow_rear, "gfx/45dr1000.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_45dr1000_yellow_flip, "gfx/45dr1000.png") {
    tmpl_vehicle_8_views(0, 1)
}

spriteset(spriteset_45dr1000_yellow_purchase, "gfx/45dr1000.png") {
    template_purchase_dualheaded(0, 159)
}
/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_45dr1000_yellow_pos, position_in_consist) {
    0: spriteset_45dr1000_yellow;
    spriteset_45dr1000_yellow_flip;
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_45dr1000_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, item_45dr1000) {
    property {
        name:                         string(STR_NAME_45DR1000);
        introduction_date:            date(1998, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 55;
        reliability_decay:            18;

        cargo_capacity:               46;
        loading_speed:                5;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABN;
        power:                        350 hp;
        weight:                       45 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  0;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_DIESEL;
        engine_class:                 ENGINE_CLASS_DIESEL;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 2, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_45dr1000_yellow_pos;
            purchase:               spriteset_45dr1000_yellow_purchase;
        can_attach_wagon:             switch_45dr1000_attach_vehid;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      spriteset_45dr1000_yellow;
        cargo_capacity:               46;
        loading_speed:                15;
        power: 350;
        weight: 45;
      }
}

spriteset(spriteset_emu100_o_ep, "gfx/100.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu100_o_em, "gfx/100.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu100_o_ed, "gfx/100.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu100_o_ed_flip, "gfx/100.png") {
    tmpl_vehicle_8_views(2, 1)
}

spriteset(spriteset_emu100_o_purchase, "gfx/100.png") {
    template_purchase_dualheaded(3, 191)
}

spriteset(spriteset_emu100_ep, "gfx/100.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu100_em, "gfx/100.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_emu100_ed, "gfx/100.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_emu100_ed_flip, "gfx/100.png") {
    tmpl_vehicle_8_views(5, 1)
}

spriteset(spriteset_emu100_purchase, "gfx/100.png") {
    template_purchase_dualheaded(3, 223)
}
/* --- Graphics callback  --- */

switch(FEAT_TRAINS, SELF, switch_emu100_mucar_o_pos, position_in_vehid_chain % 5) {
    0: spriteset_emu100_o_em;
    1: spriteset_emu100_o_em;
    2: spriteset_emu100_o_em;
    3: spriteset_emu100_o_ed;
    4: spriteset_emu100_o_ep;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu100_mucar_pos, position_in_vehid_chain % 5) {
    0: spriteset_emu100_em;
    1: spriteset_emu100_em;
    2: spriteset_emu100_em;
    3: spriteset_emu100_ed;
    4: spriteset_emu100_ep;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu100_o_gfx_pos, position_in_consist) {
    0: spriteset_emu100_o_ep;
    spriteset_emu100_o_ed_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu100_gfx_pos, position_in_consist) {
    0: spriteset_emu100_ep;
    spriteset_emu100_ed_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu100_o_mucar, num_vehs_in_vehid_chain % 5) {
    3: switch_emu100_mucar_o_pos;
    spriteset_trmu_car_add;
}

switch(FEAT_TRAINS, SELF, switch_emu100_mucar, num_vehs_in_vehid_chain % 5) {
    3: switch_emu100_mucar_pos;
    spriteset_trmu_car_add;
}

switch(FEAT_TRAINS, SELF, switch_emu100_gfx_yeardep_livery, build_year) {
    0..1980: switch_emu100_o_gfx_pos;
    switch_emu100_gfx_pos;
}

switch(FEAT_TRAINS, SELF, switch_emu100_mucar_yeardep_livery, build_year) {
    0..1980: switch_emu100_o_mucar;
    switch_emu100_mucar;
}

switch(FEAT_TRAINS, SELF, switch_emu100_livery, cargo_subtype) {
    1: switch_emu100_o_gfx_pos;
    2: switch_emu100_gfx_pos;   
    switch_emu100_gfx_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_emu100_mucar_livery, cargo_subtype) {
    1: switch_emu100_o_mucar;
    2: switch_emu100_mucar;   
    switch_emu100_mucar_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_emu100_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }


switch (FEAT_TRAINS, SELF, switch_emu100_purchase, current_year) {
    0..1980: spriteset_emu100_o_purchase;
    spriteset_emu100_purchase;
    }




/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu100_start_stop, num_vehs_in_consist) {
    5: return CB_RESULT_NO_TEXT;
    10: return CB_RESULT_NO_TEXT;
    15: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu100_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu100) {
    property {
        name:                         string(STR_NAME_EMU100);
        introduction_date:            date(1978, 6, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 33;
        reliability_decay:            18;

        cargo_capacity:               40;
        loading_speed:                5;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        121 km/h;
        track_type:                   NABE;
        power:                        255 kW;
        weight:                       40 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S,
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_3T, 5, 10, 15),
                        string(STR_CONCAT_1C,
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_emu100_livery;
            purchase:               switch_emu100_purchase;
        can_attach_wagon:             switch_emu100_attach_vehid;
        start_stop:           switch_emu100_start_stop;
        cargo_subtype_text: switch_emu100_subtype_text;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu100_mucar_livery;
        cargo_capacity:               48;
        loading_speed:                5;
        power: 255;
        weight: 40;
      }
}

spriteset(spriteset_emu200_emc, "gfx/200.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu200_ep, "gfx/200.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu200_em, "gfx/200.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu200_em_flip, "gfx/200.png") {
    tmpl_vehicle_8_views(2, 1)
}

spriteset(spriteset_emu200_purchase, "gfx/200.png") {
    template_purchase_dualheaded(3, 127)
}

switch(FEAT_TRAINS, SELF, switch_emu200_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_emu200_ep;
    1: spriteset_emu200_em;
    2: spriteset_emu200_emc;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu200_gfx_pos, position_in_consist) {
    0: spriteset_emu200_emc;
    spriteset_emu200_em_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu200_mucar, num_vehs_in_vehid_chain % 3) {
    1: switch_emu200_mucar_pos;
    spriteset_trmu_car_add;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu200_start_stop, num_vehs_in_consist) {
    3: return CB_RESULT_NO_TEXT;
    6: return CB_RESULT_NO_TEXT;
    9: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    15: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu200_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu200) {
    property {
        name:                         string(STR_NAME_EMU200);
        introduction_date:            date(1987, 6, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 33;
        reliability_decay:            18;

        cargo_capacity:               48;
        loading_speed:                7;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        121 km/h;
        track_type:                   NABE;
        power:                        310 kW;
        weight:                       49 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S,
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_5T, 3, 6, 9, 12, 15),
                        string(STR_CONCAT_1C,
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 48;
        default:                 switch_emu200_gfx_pos;
        purchase:                spriteset_emu200_purchase;
        can_attach_wagon:        switch_emu200_attach_vehid;
        start_stop:              switch_emu200_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu200_mucar;
        cargo_capacity:               48;
        loading_speed:                7;
        power: 310;
        weight: 49;
      }
}

spriteset(spriteset_emu1200_emc, "gfx/1200.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu1200_ep, "gfx/1200.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu1200_em2, "gfx/1200.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu1200_em2_flip, "gfx/1200.png") {
    tmpl_vehicle_8_views(2, 1)
}

spriteset(spriteset_emu1200_em, "gfx/1200.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu1200_em_flip, "gfx/1200.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu1200_purchase, "gfx/1200.png") {
    template_purchase_dualheaded(3, 127)
}

switch(FEAT_TRAINS, SELF, switch_emu1200_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_emu1200_ep;
    1: spriteset_emu1200_em2;
    2: spriteset_emu1200_em2_flip;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu1200_gfx_pos, position_in_consist) {
    0: spriteset_emu1200_emc;
    spriteset_emu1200_em;
}

switch(FEAT_TRAINS, SELF, switch_emu1200_mucar, num_vehs_in_vehid_chain % 9) {
    7: switch_emu1200_mucar_pos;
    spriteset_trmu_car_add;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu1200_start_stop, num_vehs_in_consist) {
    9: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu1200_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu1200) {
    property {
        name:                         string(STR_NAME_EMU1200);
        introduction_date:            date(1987, 6, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 33;
        reliability_decay:            18;

        cargo_capacity:               48;
        loading_speed:                7;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        121 km/h;
        track_type:                   NABE;
        power:                        310 kW;
        weight:                       49 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S,
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_1T, 9),
                        string(STR_CONCAT_1C,
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 48;
        default:                 switch_emu1200_gfx_pos;
        purchase:                spriteset_emu1200_purchase;
        can_attach_wagon:        switch_emu1200_attach_vehid;
        start_stop:              switch_emu1200_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu1200_mucar;
        cargo_capacity:               48;
        loading_speed:                10;
        power: 310;
        weight: 49;
      }
}

spriteset(spriteset_emu300_emc, "gfx/300h.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu300_ep, "gfx/300h.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu300_em, "gfx/300h.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu300_em_flip, "gfx/300h.png") {
    tmpl_vehicle_8_views(2, 1)
}

spriteset(spriteset_emu300_purchase, "gfx/300h.png") {
    template_purchase_dualheaded(3, 127)
}

spriteset(spriteset_emu300_emc_a, "gfx/300a.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu300_ep_a, "gfx/300a.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu300_em_a, "gfx/300a.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu300_em_a_flip, "gfx/300a.png") {
    tmpl_vehicle_8_views(2, 1)
}

spriteset(spriteset_emu300_a_purchase, "gfx/300a.png") {
    template_purchase_dualheaded(3, 127)
}
/* --- Graphics callback  --- */

switch(FEAT_TRAINS, SELF, switch_emu300_mucar_pos, position_in_vehid_chain % 3) {
    0: spriteset_emu300_ep;
    1: spriteset_emu300_em;
    2: spriteset_emu300_emc;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu300_mucar_a_pos, position_in_vehid_chain % 3) {
    0: spriteset_emu300_ep_a;
    1: spriteset_emu300_em_a;
    2: spriteset_emu300_emc_a;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu300_gfx_pos, position_in_consist) {
    0: spriteset_emu300_emc;
    spriteset_emu300_em_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu300_a_gfx_pos, position_in_consist) {
    0: spriteset_emu300_emc_a;
    spriteset_emu300_em_a_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu300_mucar, num_vehs_in_vehid_chain % 3) {
    1: switch_emu300_mucar_pos;
    spriteset_trmu_car_add;
}

switch(FEAT_TRAINS, SELF, switch_emu300_mucar_a, num_vehs_in_vehid_chain % 3) {
    1: switch_emu300_mucar_a_pos;
    spriteset_trmu_car_add;
}

switch(FEAT_TRAINS, SELF, switch_emu300_gfx_yeardep_livery, build_year) {
    0..2007: switch_emu300_gfx_pos;
    switch_emu300_a_gfx_pos;
}

switch(FEAT_TRAINS, SELF, switch_emu300_mucar_yeardep_livery, build_year) {
    0..2007: switch_emu300_mucar;
    switch_emu300_mucar_a;
}

switch(FEAT_TRAINS, SELF, switch_emu300_livery, cargo_subtype) {
    1: switch_emu300_gfx_pos;
    2: switch_emu300_a_gfx_pos;   
    switch_emu300_gfx_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_emu300_mucar_livery, cargo_subtype) {
    1: switch_emu300_mucar;
    2: switch_emu300_mucar_a;   
    switch_emu300_mucar_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_emu300_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_DOOR_MANUAL)
                                    )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_DOOR_AUTOMATIC)
                                     )
                                 );
       return CB_RESULT_NO_TEXT;
    }


switch (FEAT_TRAINS, SELF, switch_emu300_purchase, current_year) {
    0..2007: spriteset_emu300_purchase;
    spriteset_emu300_a_purchase;
    }




/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu300_start_stop, num_vehs_in_consist) {
    3: return CB_RESULT_NO_TEXT;
    6: return CB_RESULT_NO_TEXT;
    9: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    15: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu300_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu300) {
    property {
        name:                         string(STR_NAME_EMU300);
        introduction_date:            date(1989, 6, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 33;
        reliability_decay:            18;

        cargo_capacity:               52;
        loading_speed:                7;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        131 km/h;
        track_type:                   NABE;
        power:                        310 kW;
        weight:                       49 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S,
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_TRLENGTH_5T, 3, 6, 9, 12, 15),
                        string(STR_CONCAT_1C,
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 52;
        default:                switch_emu300_livery;
            purchase:               switch_emu300_purchase;
        can_attach_wagon:             switch_emu300_attach_vehid;
        start_stop:           switch_emu300_start_stop;
        cargo_subtype_text: switch_emu300_subtype_text;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu300_mucar_livery;
        cargo_capacity:               52;
        loading_speed:                7;
        power: 310;
        weight: 49;
      }
}

spriteset(spriteset_emu400_emc, "gfx/emu400.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu400_ep, "gfx/emu400.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu400_et, "gfx/emu400.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu400_em, "gfx/emu400.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu400_em_flip, "gfx/emu400.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu400_purchase, "gfx/emu400.png") {
    template_purchase_dualheaded(0, 127)
}


/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_emu400_mucar_pos, position_in_vehid_chain % 4) {
    0: spriteset_emu400_ep;
    1: spriteset_emu400_et;
    2: spriteset_emu400_em;
    3: spriteset_emu400_emc;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu400_gfx_pos, position_in_consist) {
    0: spriteset_emu400_emc;
    spriteset_emu400_em_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu400_mucar, num_vehs_in_vehid_chain % 4) {
    2: switch_emu400_mucar_pos;
    spriteset_trmu_car_add;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu400_start_stop, num_vehs_in_consist) {
    4: return CB_RESULT_NO_TEXT;
    8: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    16: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu400_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu400) {
    property {
        name:                         string(STR_NAME_EMU400);
        introduction_date:            date(1990, 11, 9);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 42;
        reliability_decay:            18;

        cargo_capacity:               180;
        loading_speed:                10;
        cost_factor:                  60;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABE;
        power:                        480 kW;
        weight:                       42 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_TRLENGTH_4T, 4, 8, 12, 16),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 180;
        default:                switch_emu400_gfx_pos;
            purchase:               spriteset_emu400_purchase;
        can_attach_wagon:             switch_emu400_attach_vehid;
        start_stop:           switch_emu400_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu400_mucar;
        cargo_capacity:               180;
        loading_speed:                20;
        power: 480;
        weight: 40;
      }
}

spriteset(spriteset_emu500_emc, "gfx/emu500.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu500_ep, "gfx/emu500.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu500_et, "gfx/emu500.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu500_em, "gfx/emu500.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu500_em_flip, "gfx/emu500.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu500_purchase, "gfx/emu500.png") {
    template_purchase_dualheaded(0, 127)
}

spriteset(spriteset_emu573_emc, "gfx/emu573.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu573_ep, "gfx/emu573.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu573_et, "gfx/emu573.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu573_em, "gfx/emu573.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu573_em_flip, "gfx/emu573.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu583_emc, "gfx/emu583.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu583_ep, "gfx/emu583.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu583_et, "gfx/emu583.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu583_em, "gfx/emu583.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu583_em_flip, "gfx/emu583.png") {
    tmpl_vehicle_8_views(3, 1)
}
/* --- Graphics callback  --- */

switch(FEAT_TRAINS, SELF, switch_emu500_emc, cargo_subtype) {
    1: spriteset_emu583_emc;
    2: spriteset_emu573_emc;
    spriteset_emu500_emc;
}

switch(FEAT_TRAINS, SELF, switch_emu500_ep, cargo_subtype) {
    1: spriteset_emu583_ep;
    2: spriteset_emu573_ep;
    spriteset_emu500_ep;
}

switch(FEAT_TRAINS, SELF, switch_emu500_et, cargo_subtype) {
    1: spriteset_emu583_et;
    2: spriteset_emu573_et;
    spriteset_emu500_et;
}

switch(FEAT_TRAINS, SELF, switch_emu500_em, cargo_subtype) {
    1: spriteset_emu583_em;
    2: spriteset_emu573_em;
    spriteset_emu500_em;
}

switch(FEAT_TRAINS, SELF, switch_emu500_em_flip, cargo_subtype) {
    1: spriteset_emu583_em_flip;
    2: spriteset_emu573_em_flip;
    spriteset_emu500_em_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu500_mucar_pos, position_in_vehid_chain % 4) {
    0: switch_emu500_ep;
    1: switch_emu500_et;
    2: switch_emu500_em;
    3: switch_emu500_emc;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu500_gfx_pos, position_in_consist) {
    0: switch_emu500_emc;
    switch_emu500_em_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu500_mucar, num_vehs_in_vehid_chain % 4) {
    2: switch_emu500_mucar_pos;
    spriteset_trmu_car_add;
}

switch(FEAT_TRAINS, SELF, switch_emu500_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE), 
                                     string(STR_COLOUR_SILVER)
                                     )
                                  
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_2, 
                                    string(STR_SUFFIX_SHANLAN),
                                     string(STR_COLOUR_LTGREEN)
                                     )
                                  
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_2, 
                                    string(STR_SUFFIX_HAIFUNG),
                                     string(STR_COLOUR_LTBLUE)
                                     )
                                  
                                 );
       return CB_RESULT_NO_TEXT;
    }


/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu500_start_stop, num_vehs_in_consist) {
    4: return CB_RESULT_NO_TEXT;
    8: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    16: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu500_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu500) {
    property {
        name:                         string(STR_NAME_EMU500);
        introduction_date:            date(1995, 10, 11);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 42;
        reliability_decay:            18;

        cargo_capacity:               180;
        loading_speed:                20;
        cost_factor:                  70;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABE;
        power:                        500 kW;
        weight:                       42 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_TRLENGTH_4T, 4, 8, 12, 16),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 180;
        default:                switch_emu500_gfx_pos;
            purchase:               spriteset_emu500_purchase;
        can_attach_wagon:             switch_emu500_attach_vehid;
        start_stop:           switch_emu500_start_stop;
        cargo_subtype_text: switch_emu500_subtype_text;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu500_mucar;
        cargo_capacity:               180;
        loading_speed:                20;
        power: 500;
        weight: 40;
      }
}

spriteset(spriteset_emu600_emc, "gfx/emu600.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_emu600_ep, "gfx/emu600.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_emu600_et, "gfx/emu600.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_emu600_em, "gfx/emu600.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu600_em_flip, "gfx/emu600.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu600_purchase, "gfx/emu600.png") {
    template_purchase_dualheaded(0, 127)
}


/* --- Graphics callback  --- */


switch(FEAT_TRAINS, SELF, switch_emu600_mucar_pos, position_in_vehid_chain % 4) {
    0: spriteset_emu600_ep;
    1: spriteset_emu600_et;
    2: spriteset_emu600_em;
    3: spriteset_emu600_emc;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu600_gfx_pos, position_in_consist) {
    0: spriteset_emu600_emc;
    spriteset_emu600_em_flip;
}

switch(FEAT_TRAINS, SELF, switch_emu600_mucar, num_vehs_in_vehid_chain % 4) {
    2: switch_emu600_mucar_pos;
    spriteset_trmu_car_add;
}

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu600_start_stop, num_vehs_in_consist) {
    4: return CB_RESULT_NO_TEXT;
    8: return CB_RESULT_NO_TEXT;
    12: return CB_RESULT_NO_TEXT;
    16: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu600_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu600) {
    property {
        name:                         string(STR_NAME_EMU600);
        introduction_date:            date(2001, 10, 3);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 24;
        reliability_decay:            18;

        cargo_capacity:               180;
        loading_speed:                20;
        cost_factor:                  70;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABE;
        power:                        480 kW;
        weight:                       38 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  1;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
        length: 8;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_TRLENGTH_4T, 4, 8, 12, 16),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 180;
        default:                switch_emu600_gfx_pos;
            purchase:               spriteset_emu600_purchase;
        can_attach_wagon:             switch_emu600_attach_vehid;
        start_stop:           switch_emu600_start_stop;
    }
    /*Multiple Unit Car*/
      livery_override(trmu_car){
        default:                      switch_emu600_mucar;
        cargo_capacity:               180;
        loading_speed:                20;
        power: 480;
        weight: 38;
      }
}


spriteset(ss_emu700_cabs1f_firstbatch,            "gfx/700.png") {template_10_standard_emu(1,1)}

spriteset(ss_emu700_cabs1b_firstbatch,            "gfx/700.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu700_cabs2f_firstbatch,            "gfx/700.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu700_cabs2b_firstbatch,            "gfx/700.png") {template_10_standard_emu(1,1)}

spriteset(ss_emu700_cabs1f_secbatch,            "gfx/700s.png") {template_10_standard_emu(1,1)}

spriteset(ss_emu700_cabs1b_secbatch,            "gfx/700s.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu700_cabs2f_secbatch,            "gfx/700s.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu700_cabs2b_secbatch,            "gfx/700s.png") {template_10_standard_emu(1,1)}

spriteset(spriteset_emu700_purchase, "gfx/700s.png") {
    template_purchase_dualheaded(0, 201)
}

spriteset(spriteset_emu700_em, "gfx/700.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_emu700_ep, "gfx/700.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu700_et, "gfx/700.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_emu700_em_flip, "gfx/700.png") {
    tmpl_vehicle_8_views(4, 1)
}

spriteset(spriteset_emu700_ep_flip, "gfx/700.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu700_et_flip, "gfx/700.png") {
    tmpl_vehicle_8_views(5, 1)
}

spriteset(spriteset_emu700_2batch_em, "gfx/700s.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_emu700_2batch_ep, "gfx/700s.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu700_2batch_et, "gfx/700s.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_emu700_2batch_em_flip, "gfx/700s.png") {
    tmpl_vehicle_8_views(4, 1)
}

spriteset(spriteset_emu700_2batch_ep_flip, "gfx/700s.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu700_2batch_et_flip, "gfx/700s.png") {
    tmpl_vehicle_8_views(5, 1)
}

/* --- Graphics callback  --- */

// Subtype Selection
switch(FEAT_TRAINS, PARENT, sw_emu700_cabs1f, cargo_subtype) {
        0: ss_emu700_cabs1f_secbatch;
        1: ss_emu700_cabs1f_firstbatch;
    }


switch(FEAT_TRAINS, PARENT, sw_emu700_cabs1b, cargo_subtype) {
        0: ss_emu700_cabs1b_secbatch;
        1: ss_emu700_cabs1b_firstbatch;
    }


switch(FEAT_TRAINS, PARENT, sw_emu700_cabs2f, cargo_subtype) {
        0: ss_emu700_cabs2f_secbatch;
        1: ss_emu700_cabs2f_firstbatch;
    }

switch(FEAT_TRAINS, PARENT, sw_emu700_cabs2b, cargo_subtype) {
        0: ss_emu700_cabs2b_secbatch;
        1: ss_emu700_cabs2b_firstbatch;
    }

switch(FEAT_TRAINS, SELF, switch_emu700_mucar_pos_1batch, position_in_consist) {
    2: spriteset_emu700_ep;
    3: spriteset_emu700_et;
    4: spriteset_emu700_em;
    5: spriteset_emu700_em_flip;
    6: spriteset_emu700_et_flip;
    7: spriteset_emu700_ep_flip;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu700_mucar_pos_2batch, position_in_consist) {
    2: spriteset_emu700_2batch_ep;
    3: spriteset_emu700_2batch_et;
    4: spriteset_emu700_2batch_em;
    5: spriteset_emu700_2batch_em_flip;
    6: spriteset_emu700_2batch_et_flip;
    7: spriteset_emu700_2batch_ep_flip;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, PARENT, switch_emu700_mucar_livery, cargo_subtype) {
        0: switch_emu700_mucar_pos_2batch;
        1: switch_emu700_mucar_pos_1batch;
    }

switch(FEAT_TRAINS, SELF, switch_emu700_mucar, num_vehs_in_consist) {
    8: switch_emu700_mucar_livery;
    spriteset_trmu_car_add;
}



/* Cab selection */
    // Rear cab
    switch (FEAT_TRAINS, PARENT, sw_emu700_rear, vehicle_is_reversed) {				
            1:  sw_emu700_cabs1b;                   // cab01	
            sw_emu700_cabs2f;                       // cab02
        }

    // Lead cab
    switch (FEAT_TRAINS, PARENT, sw_emu700_lead, vehicle_is_reversed) {				
            1:  sw_emu700_cabs2b;                   // cab02
            sw_emu700_cabs1f;                       // cab01	
        }

switch(FEAT_TRAINS, SELF, switch_emu700_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_ORANGE), 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu700_start_stop, num_vehs_in_consist) {
    10: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

switch (FEAT_TRAINS, SELF, sw_emu700_graphics, position_in_consist) {				
		0:  dummy_sprites;
        9:  dummy_sprites;
        1:  sw_emu700_lead;
        8:  sw_emu700_rear;
        switch_emu700_mucar_livery;
	}

switch(FEAT_TRAINS, SELF, sw_emu700_length, position_in_consist) {
    0:  return 1;
    9: return 1;
    return 8;
}
    

switch (FEAT_TRAINS, SELF, sw_emu700_articulated_part, extra_callback_info1) {
		1 .. 9: return emu700;									
		return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
	}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu700_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu700) {
    property {
        name:                         string(STR_NAME_EMU700);
        introduction_date:            date(2007, 8, 28);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 40;
        reliability_decay:            15;

        cargo_capacity:               116;
        loading_speed:                20;
        cost_factor:                  70;
        running_cost_factor:          54;

        speed:                        111 km/h;
        track_type:                   NABE;
        power:                        480 kW;
        weight:                       40 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  0;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_TRLENGTH_1T, 8),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 116;
        default:                sw_emu700_graphics;
            purchase:               spriteset_emu700_purchase;
        can_attach_wagon:             switch_emu700_attach_vehid;
        articulated_part:               sw_emu700_articulated_part;
        start_stop:           switch_emu700_start_stop;
        cargo_subtype_text: switch_emu700_subtype_text;
        length:                       sw_emu700_length;
    }
}


spriteset(ss_emu800_cabs1f_firstbatch,            "gfx/800.png") {template_10_standard_emu(1,1)}

spriteset(ss_emu800_cabs1b_firstbatch,            "gfx/800.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu800_cabs2f_firstbatch,            "gfx/800.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu800_cabs2b_firstbatch,            "gfx/800.png") {template_10_standard_emu(1,1)}

spriteset(ss_emu800_cabs1f_secbatch,            "gfx/800s.png") {template_10_standard_emu(1,1)}

spriteset(ss_emu800_cabs1b_secbatch,            "gfx/800s.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu800_cabs2f_secbatch,            "gfx/800s.png") {template_10_reversed_emu(1,41)}

spriteset(ss_emu800_cabs2b_secbatch,            "gfx/800s.png") {template_10_standard_emu(1,1)}

spriteset(spriteset_emu800_purchase, "gfx/800.png") {
    template_purchase_dualheaded(0, 201)
}

spriteset(spriteset_emu800_em, "gfx/800.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu800_ep, "gfx/800.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_emu800_em_flip, "gfx/800.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu800_ep_flip, "gfx/800.png") {
    tmpl_vehicle_8_views(5, 1)
}

spriteset(spriteset_emu800_2batch_em, "gfx/800s.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_emu800_2batch_ep, "gfx/800s.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_emu800_2batch_em_flip, "gfx/800s.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_emu800_2batch_ep_flip, "gfx/800s.png") {
    tmpl_vehicle_8_views(5, 1)
}

/* --- Graphics callback  --- */

// Subtype Selection
switch(FEAT_TRAINS, PARENT, sw_emu800_cabs1f, cargo_subtype) {
        0: ss_emu800_cabs1f_firstbatch;
        1: ss_emu800_cabs1f_secbatch;
    }


switch(FEAT_TRAINS, PARENT, sw_emu800_cabs1b, cargo_subtype) {
        0: ss_emu800_cabs1b_firstbatch;
        1: ss_emu800_cabs1b_secbatch;
    }


switch(FEAT_TRAINS, PARENT, sw_emu800_cabs2f, cargo_subtype) {
        0: ss_emu800_cabs2f_firstbatch;
        1: ss_emu800_cabs2f_secbatch;
    }

switch(FEAT_TRAINS, PARENT, sw_emu800_cabs2b, cargo_subtype) {
        0: ss_emu800_cabs2b_firstbatch;
        1: ss_emu800_cabs2b_secbatch;
    }

switch(FEAT_TRAINS, SELF, switch_emu800_mucar_pos_1batch, position_in_consist) {
    2: spriteset_emu800_em;
    3: spriteset_emu800_ep;
    4: spriteset_emu800_em;
    5: spriteset_emu800_em_flip;
    6: spriteset_emu800_ep_flip;
    7: spriteset_emu800_em_flip;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_emu800_mucar_pos_2batch, position_in_consist) {
    2: spriteset_emu800_2batch_em;
    3: spriteset_emu800_2batch_ep;
    4: spriteset_emu800_2batch_em;
    5: spriteset_emu800_2batch_em_flip;
    6: spriteset_emu800_2batch_ep_flip;
    7: spriteset_emu800_2batch_em_flip;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, PARENT, switch_emu800_mucar_livery, cargo_subtype) {
        0: switch_emu800_mucar_pos_1batch;
        1: switch_emu800_mucar_pos_2batch;
    }

switch(FEAT_TRAINS, SELF, switch_emu800_mucar, num_vehs_in_consist) {
    8: switch_emu800_mucar_livery;
    spriteset_trmu_car_add;
}



/* Cab selection */
    // Rear cab
    switch (FEAT_TRAINS, PARENT, sw_emu800_rear, vehicle_is_reversed) {				
            1:  sw_emu800_cabs1b;                   // cab01	
            sw_emu800_cabs2f;                       // cab02
        }

    // Lead cab
    switch (FEAT_TRAINS, PARENT, sw_emu800_lead, vehicle_is_reversed) {				
            1:  sw_emu800_cabs2b;                   // cab02
            sw_emu800_cabs1f;                       // cab01	
        }

switch(FEAT_TRAINS, SELF, switch_emu800_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu800_start_stop, num_vehs_in_consist) {
    10: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

switch (FEAT_TRAINS, SELF, sw_emu800_graphics, position_in_consist) {				
		0:  dummy_sprites;
        9:  dummy_sprites;
        1:  sw_emu800_lead;
        8:  sw_emu800_rear;
        switch_emu800_mucar_livery;
	}

switch(FEAT_TRAINS, SELF, sw_emu800_length, position_in_consist) {
    0:  return 1;
    9: return 1;
    return 8;
}
    

switch (FEAT_TRAINS, SELF, sw_emu800_articulated_part, extra_callback_info1) {
		1 .. 9: return emu800;									
		return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
	}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_emu800_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, emu800) {
    property {
        name:                         string(STR_NAME_EMU800);
        introduction_date:            date(2013, 9, 3);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 40;
        reliability_decay:            15;

        cargo_capacity:               116;
        loading_speed:                20;
        cost_factor:                  70;
        running_cost_factor:          54;

        speed:                        131 km/h;
        track_type:                   NABE;
        power:                        400 kW;
        weight:                       40 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  0;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_TRLENGTH_1T, 8),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 116;
        default:                sw_emu800_graphics;
            purchase:               spriteset_emu800_purchase;
        can_attach_wagon:             switch_emu800_attach_vehid;
        articulated_part:               sw_emu800_articulated_part;
        start_stop:           switch_emu800_start_stop;
        cargo_subtype_text: switch_emu800_subtype_text;
        length:                       sw_emu800_length;
    }
}


spriteset(ss_temu1000_cabs1f,            "gfx/temu1000.png") {template_10_standard_emu(1,1)}

spriteset(ss_temu1000_cabs1b,            "gfx/temu1000.png") {template_10_reversed_emu(1,41)}

spriteset(ss_temu1000_cabs2f,            "gfx/temu1000.png") {template_10_reversed_emu(1,41)}

spriteset(ss_temu1000_cabs2b,            "gfx/temu1000.png") {template_10_standard_emu(1,1)}

spriteset(spriteset_temu1000_purchase, "gfx/temu1000.png") {
    template_purchase_dualheaded(0, 201)
}

spriteset(spriteset_temu1000_em, "gfx/temu1000.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_temu1000_ep, "gfx/temu1000.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_temu1000_em_flip, "gfx/temu1000.png") {
    tmpl_vehicle_8_views(3, 1)
}

spriteset(spriteset_temu1000_ep_flip, "gfx/temu1000.png") {
    tmpl_vehicle_8_views(4, 1)
}

/* --- Graphics callback  --- */

switch(FEAT_TRAINS, SELF, switch_temu1000_mucar_pos, position_in_consist) {
    2: spriteset_temu1000_em;
    3: spriteset_temu1000_ep;
    4: spriteset_temu1000_em;
    5: spriteset_temu1000_em_flip;
    6: spriteset_temu1000_ep_flip;
    7: spriteset_temu1000_em_flip;
    return CB_RESULT_NO_TEXT;
}



/* Cab selection */
    // Rear cab
    switch (FEAT_TRAINS, PARENT, sw_temu1000_rear, vehicle_is_reversed) {				
            1:  ss_temu1000_cabs1b;                   // cab01	
            ss_temu1000_cabs2f;                       // cab02
        }

    // Lead cab
    switch (FEAT_TRAINS, PARENT, sw_temu1000_lead, vehicle_is_reversed) {				
            1:  ss_temu1000_cabs2b;                   // cab02
            ss_temu1000_cabs1f;                       // cab01	
        }

/* --- Start/stop callback  --- */
switch(FEAT_TRAINS, SELF, switch_temu1000_start_stop, num_vehs_in_consist) {
    10: return CB_RESULT_NO_TEXT;
    return string(STR_UNIT_ERROR);
}

switch (FEAT_TRAINS, SELF, sw_temu1000_graphics, position_in_consist) {				
		0:  dummy_sprites;
        9:  dummy_sprites;
        1:  sw_temu1000_lead;
        8:  sw_temu1000_rear;
        switch_temu1000_mucar_pos;
	}

switch(FEAT_TRAINS, SELF, sw_temu1000_length, position_in_consist) {
    0:  return 1;
    9: return 1;
    return 8;
}
    

switch (FEAT_TRAINS, SELF, sw_temu1000_articulated_part, extra_callback_info1) {
		1 .. 9: return temu1000;									
		return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
	}

/* --- Wagon attach callback  --- */
switch(FEAT_TRAINS, SELF, switch_temu1000_attach_vehid, vehicle_type_id) {
    trmu_car: return CB_RESULT_ATTACH_ALLOW;
    return string(STR_MUCAR_ERROR);
}

/* Define the actual train */
item(FEAT_TRAINS, temu1000) {
    property {
        name:                         string(STR_NAME_TEMU1000);
        introduction_date:            date(2007, 2, 16);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 40;
        reliability_decay:            15;

        cargo_capacity:               32;
        loading_speed:                10;
        cost_factor:                  70;
        running_cost_factor:          54;

        speed:                        131 km/h;
        track_type:                   NABE;
        power:                        380 kW;
        weight:                       40 ton;

        climates_available:           ALL_CLIMATES;
        ai_special_flag:              AI_FLAG_PASSENGER;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_TILT);
        refittable_cargo_classes:     bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost:                   0;
        dual_headed:                  0;
        ai_engine_rank:               0;

        running_cost_base:            RUNNING_COST_ELECTRIC;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 4, ENABLE_WAGON_POWER);

        tractive_effort_coefficient:  0.3;
        air_drag_coefficient:         0.07;
        bitmask_vehicle_info:         0;
    }
    /*Graphics and Callbacks*/
      graphics { // graphics for engine
         additional_text:  string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_CONCAT_2, 
                           string(STR_USE_LTDEXPRESS),
                           string(STR_TILT),
                        ),
                        string(STR_TRLENGTH_1T, 8),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA),
                        )
                  );
        cargo_capacity: return 48;
        default:                sw_temu1000_graphics;
            purchase:               spriteset_temu1000_purchase;
        can_attach_wagon:             switch_temu1000_attach_vehid;
        articulated_part:               sw_temu1000_articulated_part;
        start_stop:           switch_temu1000_start_stop;
        length:                       sw_temu1000_length;
    }
}


spriteset(spriteset_sp32400_blue, "gfx/sp32400.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_sp32400_orange, "gfx/sp32400.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_sp32400_cc, "gfx/sp32400.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_sp32400_cc_light, "gfx/sp32400.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_sp32400_purchase_blue, "gfx/sp32400.png") {
    tmpl_vehicle_single(4, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_sp32400_year, current_year) {
    spriteset_sp32400_blue;
}

switch(FEAT_TRAINS, SELF, switch_sp32400_livery, cargo_subtype) {
    0: switch_sp32400_year;
    1: spriteset_sp32400_blue;
    2: spriteset_sp32400_orange;
    3: spriteset_sp32400_cc;
    4: spriteset_sp32400_cc_light;
}

switch(FEAT_TRAINS, SELF, switch_sp32400_purchase, current_year) {
    spriteset_sp32400_purchase_blue;
}

switch(FEAT_TRAINS, SELF, switch_sp32400_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_EXPRESS),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_ENGINEER_SLEEPER),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                  
                                 );
    3: return string(STR_REFIT_CC);
    4: return string(STR_CONCAT_2, string(STR_REFIT_CC), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_sp32400) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_SP32400);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1966, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            10;
        cost_factor:                  10;
        running_cost_factor:          40; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               64;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       30 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 64;
  cargo_subtype_text: switch_sp32400_subtype_text;
  default: switch_sp32400_livery;
  purchase: switch_sp32400_purchase;
  }
}

spriteset(spriteset_sp32550_blue, "gfx/sp32550.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_sp32550_light_blue, "gfx/sp32550.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_sp32550_cc, "gfx/sp32550.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_sp32550_cc_light, "gfx/sp32550.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_sp32550_purchase_blue, "gfx/sp32550.png") {
    tmpl_vehicle_single(4, 87, 16, -25, -8)
}

spriteset(spriteset_sp32550_purchase_light_blue, "gfx/sp32550.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_sp32550_year, current_year) {
    0..2019: spriteset_sp32550_blue;
    spriteset_sp32550_light_blue;
}

switch(FEAT_TRAINS, SELF, switch_sp32550_livery, cargo_subtype) {
    0: switch_sp32550_year;
    1: spriteset_sp32550_blue;
    2: spriteset_sp32550_light_blue;
    3: spriteset_sp32550_cc;
    4: spriteset_sp32550_cc_light;
}

switch(FEAT_TRAINS, SELF, switch_sp32550_purchase, current_year) {
    0..2019: spriteset_sp32550_purchase_blue;
    spriteset_sp32550_purchase_light_blue;
}

switch(FEAT_TRAINS, SELF, switch_sp32550_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_EXPRESS),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_BREEZYBLUE),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    3: return string(STR_REFIT_CC);
    4: return string(STR_CONCAT_2, string(STR_REFIT_CC), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_sp32550) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_SP32550);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1966, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            10;
        cost_factor:                  10;
        running_cost_factor:          40; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               64;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       30 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 64;
  cargo_subtype_text: switch_sp32550_subtype_text;
  default: switch_sp32550_livery;
  purchase: switch_sp32550_purchase;
  }
}

spriteset(spriteset_tp32200_blue, "gfx/tp32200.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_tp32200_light_blue, "gfx/tp32200.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_tp32200_dark_blue, "gfx/tp32200.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_tp32200_cc, "gfx/tp32200.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_tp32200_cc_light, "gfx/tp32200.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_tp32200_purchase_blue, "gfx/tp32200.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_tp32200_purchase_light_blue, "gfx/tp32200.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_tp32200_year, current_year) {
    0..2019: spriteset_tp32200_blue;
    spriteset_tp32200_light_blue;
}

switch(FEAT_TRAINS, SELF, switch_tp32200_livery, cargo_subtype) {
    0: switch_tp32200_year;
    1: spriteset_tp32200_blue;
    2: spriteset_tp32200_light_blue;
    3: spriteset_tp32200_dark_blue;
    4: spriteset_tp32200_cc;
    5: spriteset_tp32200_cc_light;
}

switch(FEAT_TRAINS, SELF, switch_tp32200_purchase, current_year) {
    0..2019: spriteset_tp32200_purchase_blue;
    spriteset_tp32200_purchase_light_blue;
}

switch(FEAT_TRAINS, SELF, switch_tp32200_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_ORDINARY),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_BREEZYBLUE),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    3: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_ORDINARY),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_NVBLUE)
                                     )
                                  
                                 );
    4: return string(STR_REFIT_CC);
    5: return string(STR_CONCAT_2, string(STR_REFIT_CC), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_tp32200) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_TP32200);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1971, 10, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            10;
        cost_factor:                  10;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               96;
        cargo_allow_refit:            [PASS, MAIL, GOOD];
        dual_headed:                  0;
        weight:                       35 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 96;
  cargo_subtype_text: switch_tp32200_subtype_text;
  default: switch_tp32200_livery;
  purchase: switch_tp32200_purchase;
  }
}

spriteset(spriteset_tp32800_blue, "gfx/tp32800.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_tp32800_light_blue, "gfx/tp32800.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_tp32800_dark_blue, "gfx/tp32800.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_tp32800_cc, "gfx/tp32800.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_tp32800_cc_light, "gfx/tp32800.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_tp32800_purchase_blue, "gfx/tp32800.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_tp32800_purchase_light_blue, "gfx/tp32800.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_tp32800_year, current_year) {
    0..2019: spriteset_tp32800_blue;
    spriteset_tp32800_light_blue;
}

switch(FEAT_TRAINS, SELF, switch_tp32800_livery, cargo_subtype) {
    0: switch_tp32800_year;
    1: spriteset_tp32800_blue;
    2: spriteset_tp32800_light_blue;
    3: spriteset_tp32800_dark_blue;
    4: spriteset_tp32800_cc;
    5: spriteset_tp32800_cc_light;
}

switch(FEAT_TRAINS, SELF, switch_tp32800_purchase, current_year) {
    0..2019: spriteset_tp32800_purchase_blue;
    spriteset_tp32800_purchase_light_blue;
}

switch(FEAT_TRAINS, SELF, switch_tp32800_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_ORDINARY),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_BREEZYBLUE),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    3: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_ORDINARY),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_NVBLUE)
                                     )
                                  
                                 );
    4: return string(STR_REFIT_CC);
    5: return string(STR_CONCAT_2, string(STR_REFIT_CC), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_tp32800) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_TP32800);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1959, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 50;
        reliability_decay:            10;
        cost_factor:                  10;
        running_cost_factor:          30; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        85 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               164;
        cargo_allow_refit:            [PASS, MAIL, GOOD];
        dual_headed:                  0;
        weight:                       30 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 164;
  cargo_subtype_text: switch_tp32800_subtype_text;
  default: switch_tp32800_livery;
  purchase: switch_tp32800_purchase;
  }
}



spriteset(spriteset_sp2300_light_blue, "gfx/sp2300.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_sp2300_blue, "gfx/sp2300.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_sp2300_dark_blue, "gfx/sp2300.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_sp2300_cc, "gfx/sp2300.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_sp2300_cc_light, "gfx/sp2300.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_sp2300_purchase_light_blue, "gfx/sp2300.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_sp2300_purchase_blue, "gfx/sp2300.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_sp2300_year, current_year) {
    0..2013: spriteset_sp2300_light_blue;
    spriteset_sp2300_blue;
}

switch(FEAT_TRAINS, SELF, switch_sp2300_livery, cargo_subtype) {
    0: switch_sp2300_year;
    1: spriteset_sp2300_light_blue;
    2: spriteset_sp2300_blue;
    3: spriteset_sp2300_dark_blue;
    4: spriteset_sp2300_cc;
    5: spriteset_sp2300_cc_light;
}

switch(FEAT_TRAINS, SELF, switch_sp2300_purchase, current_year) {
    0..2013: spriteset_sp2300_purchase_light_blue;
    spriteset_sp2300_purchase_blue;
}

switch(FEAT_TRAINS, SELF, switch_sp2300_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_TOUR),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    3: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_BREEZYBLUE),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                  
                                 );
    4: return string(STR_REFIT_CC);
    5: return string(STR_CONCAT_2, string(STR_REFIT_CC), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_sp2300) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_SP2300);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1993, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 30;
        reliability_decay:            10;
        cost_factor:                  50;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               62;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       30 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_LOC),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 62;
  cargo_subtype_text: switch_sp2300_subtype_text;
  default: switch_sp2300_livery;
  purchase: switch_sp2300_purchase;
  }
}

spriteset(spriteset_sp32800_blue, "gfx/sp32800.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_sp32800_red, "gfx/sp32800.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_sp32800_orange, "gfx/sp32800.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_sp32800_cc, "gfx/sp32800.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_sp32800_purchase_blue, "gfx/sp32800.png") {
    tmpl_vehicle_single(4, 87, 16, -25, -8)
}

spriteset(spriteset_sp32800_purchase_red, "gfx/sp32800.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_sp32800_purchase_orange, "gfx/sp32800.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_sp32800_year, current_year) {
    0..1969: spriteset_sp32800_blue;
    1970..1976: spriteset_sp32800_red;
    spriteset_sp32800_orange;
}

switch(FEAT_TRAINS, SELF, switch_sp32800_livery, cargo_subtype) {
    0: switch_sp32800_year;
    1: spriteset_sp32800_blue;
    2: spriteset_sp32800_red;
    3: spriteset_sp32800_orange;
    4: spriteset_sp32800_cc;
}

switch(FEAT_TRAINS, SELF, switch_sp32800_purchase, current_year) {
    0..1969: spriteset_sp32800_purchase_blue;
    1970..1979: spriteset_sp32800_purchase_red;
    spriteset_sp32800_purchase_orange;
}

switch(FEAT_TRAINS, SELF, switch_sp32800_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_KUANKUANG),
                                    ),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_KUANKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_WHITE), 
                                     string(STR_COLOUR_RED)
                                     )
                                 );
    3: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    4: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_sp32800) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_SP32800);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1957, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               48;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       35 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 48;
  cargo_subtype_text: switch_sp32800_subtype_text;
  default: switch_sp32800_livery;
  purchase: switch_sp32800_purchase;
  }
}

spriteset(spriteset_sp32850_light_blue, "gfx/sp32850.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_sp32850_orange, "gfx/sp32850.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_sp32850_cc, "gfx/sp32850.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_sp32850_purchase_light_blue, "gfx/sp32850.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_sp32850_purchase_orange, "gfx/sp32850.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_sp32850_year, current_year) {
    0..1979: spriteset_sp32850_light_blue;
    spriteset_sp32850_orange;
}

switch(FEAT_TRAINS, SELF, switch_sp32850_livery, cargo_subtype) {
    0: switch_sp32850_year;
    1: spriteset_sp32850_light_blue;
    2: spriteset_sp32850_orange;
    3: spriteset_sp32850_cc;
}

switch(FEAT_TRAINS, SELF, switch_sp32850_purchase, current_year) {
    0..1979: spriteset_sp32850_purchase_light_blue;
    spriteset_sp32850_purchase_orange;
}

switch(FEAT_TRAINS, SELF, switch_sp32850_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_WHITE), 
                                     string(STR_COLOUR_LTBLUE)
                                     )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    3: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_sp32850) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_SP32850);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1970, 2, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               48;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       35 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 48;
  cargo_subtype_text: switch_sp32850_subtype_text;
  default: switch_sp32850_livery;
  purchase: switch_sp32850_purchase;
  }
}

spriteset(spriteset_fpk10000_orange, "gfx/fpk10000.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_fpk11000_orange, "gfx/fpk10000.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_fpk10000_cc, "gfx/fpk10000.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_fpk11000_cc, "gfx/fpk10000.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_fpk10000_purchase_orange, "gfx/fpk10000.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

random_switch(FEAT_TRAINS, SELF, switch_fpk10000_orange) {
    9: spriteset_fpk10000_orange;
    1: spriteset_fpk11000_orange;
}

random_switch(FEAT_TRAINS, SELF, switch_fpk10000_cc) {
    9: spriteset_fpk10000_cc;
    1: spriteset_fpk11000_cc;
}

switch(FEAT_TRAINS, SELF, switch_fpk10000_livery, cargo_subtype) {
    0: switch_fpk10000_orange;
    1: switch_fpk10000_cc;
}

switch(FEAT_TRAINS, SELF, switch_fpk10000_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    1: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_fpk10000) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_FPK10000);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1980, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               48;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       35 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 48;
  cargo_subtype_text: switch_fpk10000_subtype_text;
  default: switch_fpk10000_livery;
  purchase: spriteset_fpk10000_purchase_orange;
  }
}

spriteset(spriteset_fpk10100_orange, "gfx/fpk10100.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_fpk11100_orange, "gfx/fpk10100.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_fpk10100_cc, "gfx/fpk10100.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_fpk11100_cc, "gfx/fpk10100.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_fpk10100_purchase_orange, "gfx/fpk10100.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

random_switch(FEAT_TRAINS, SELF, switch_fpk10100_orange) {
    7: spriteset_fpk10100_orange;
    1: spriteset_fpk11100_orange;
}

random_switch(FEAT_TRAINS, SELF, switch_fpk10100_cc) {
    7: spriteset_fpk10100_cc;
    1: spriteset_fpk11100_cc;
}

switch(FEAT_TRAINS, SELF, switch_fpk10100_livery, cargo_subtype) {
    0: switch_fpk10100_orange;
    1: switch_fpk10100_cc;
}

switch(FEAT_TRAINS, SELF, switch_fpk10100_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    1: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_fpk10100) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_FPK10100);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1981, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               48;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       35 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 48;
  cargo_subtype_text: switch_fpk10100_subtype_text;
  default: switch_fpk10100_livery;
  purchase: spriteset_fpk10100_purchase_orange;
  }
}

spriteset(spriteset_fpk10200_orange, "gfx/fpk10200.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_fpk11200_orange, "gfx/fpk10200.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_fpk11300_orange, "gfx/fpk10200.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_fpk10200_cc, "gfx/fpk10200.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_fpk11200_cc, "gfx/fpk10200.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_fpk11300_cc, "gfx/fpk10200.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_fpk10200_purchase_orange, "gfx/fpk10200.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

random_switch(FEAT_TRAINS, SELF, switch_fpk10200_orange) {
    5: spriteset_fpk10200_orange;
    2: spriteset_fpk11200_orange;
    1: spriteset_fpk11300_orange;
}

random_switch(FEAT_TRAINS, SELF, switch_fpk10200_cc) {
    5: spriteset_fpk10200_cc;
    2: spriteset_fpk11200_cc;
    1: spriteset_fpk11300_cc;
}

switch(FEAT_TRAINS, SELF, switch_fpk10200_livery, cargo_subtype) {
    0: switch_fpk10200_orange;
    1: switch_fpk10200_cc;
}

switch(FEAT_TRAINS, SELF, switch_fpk10200_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    1: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_fpk10200) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_FPK10200);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1985, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               48;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       30 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 52;
  cargo_subtype_text: switch_fpk10200_subtype_text;
  default: switch_fpk10200_livery;
  purchase: spriteset_fpk10200_purchase_orange;
  }
}

spriteset(spriteset_ppt1000, "gfx/pp1000.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_pph1000, "gfx/pp1000.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_ppc1000, "gfx/pp1000.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_ppt2000, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_ppd2000, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_ppt1000_green, "gfx/pp1000.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_pph1000_green, "gfx/pp1000.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_ppc1000_green, "gfx/pp1000.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_ppt2000_green, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(4, 0)
}

spriteset(spriteset_ppd2000_green, "gfx/pp2000.png") {
    tmpl_vehicle_8_views(5, 0)
}

spriteset(spriteset_ppcar_purchase, "gfx/pp1000.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_ppt1000, cargo_subtype) {
    0: spriteset_ppt1000;
    spriteset_ppt1000_green;
}

switch(FEAT_TRAINS, SELF, switch_ppt2000, cargo_subtype) {
    0: spriteset_ppt2000;
    spriteset_ppt2000_green;
}

switch(FEAT_TRAINS, SELF, switch_ppc1000, cargo_subtype) {
    0: spriteset_ppc1000;
    spriteset_ppc1000_green;
}

switch(FEAT_TRAINS, SELF, switch_pph1000, cargo_subtype) {
    0: spriteset_pph1000;
    spriteset_pph1000_green;
}

switch(FEAT_TRAINS, SELF, switch_ppd2000, cargo_subtype) {
    0: spriteset_ppd2000;
    spriteset_ppd2000_green;
}

random_switch(FEAT_TRAINS, SELF, switch_ppcar_1000_2000) {
    50: switch_ppt1000;
    3: switch_ppt2000;
}

switch(FEAT_TRAINS, SELF, switch_ppcar_pos_12, position_in_vehid_chain_from_end) {
    12: switch_ppcar_1000_2000;
    11: switch_ppc1000;
    10: switch_ppcar_1000_2000;
    9: switch_pph1000;
    6..8: switch_ppcar_1000_2000;
    5: switch_ppc1000;
    4: switch_pph1000;
    1..3: switch_ppcar_1000_2000;
    0: switch_ppd2000;
    switch_ppcar_1000_2000;
}

switch(FEAT_TRAINS, SELF, switch_ppcar_pos_10, position_in_vehid_chain_from_end) {
    10: switch_ppc1000;
    9: switch_ppcar_1000_2000;
    8: switch_pph1000;
    3..7: switch_ppcar_1000_2000;
    2: switch_pph1000;
    1: switch_ppcar_1000_2000;
    0: switch_ppc1000;
    return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_ppcar_auto, num_vehs_in_vehid_chain) {
    1..10: switch_ppcar_pos_10;
    switch_ppcar_pos_12;
}

switch(FEAT_TRAINS, SELF, switch_ppcar_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_ORANGE)
                                    )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_GREEN), 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
       return CB_RESULT_NO_TEXT;
    }

/* Define the actual train */
item(FEAT_TRAINS, item_ppcar) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_PPCAR);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1996, 11, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 40;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        131 km/h;
        loading_speed:                10;
        misc_flags:                   bitmask(TRAIN_FLAG_AUTOREFIT);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               52;
        cargo_allow_refit:            [PASS];
        dual_headed:                  0;
        weight:                       35 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_EXP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 48;
  cargo_subtype_text: switch_ppcar_subtype_text;
  default: switch_ppcar_auto;
  purchase: spriteset_ppcar_purchase;
  }
}


spriteset(spriteset_pbk32800_red, "gfx/pbk32800.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_pbk32800_orange, "gfx/pbk32800.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_pbk32800_blue, "gfx/pbk32800.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_pbk32800_cc, "gfx/pbk32800.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_pbk32800_purchase_red, "gfx/pbk32800.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_pbk32800_purchase_orange, "gfx/pbk32800.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_pbk32800_year, current_year) {
    0..1979: spriteset_pbk32800_red;
    spriteset_pbk32800_orange;
}

switch(FEAT_TRAINS, SELF, switch_pbk32800_livery, cargo_subtype) {
    0: switch_pbk32800_year;
    1: spriteset_pbk32800_red;
    2: spriteset_pbk32800_orange;
    3: spriteset_pbk32800_blue;
    4: spriteset_pbk32800_cc;
}

switch(FEAT_TRAINS, SELF, switch_pbk32800_purchase, current_year) {
    0..1979: spriteset_pbk32800_purchase_red;
    spriteset_pbk32800_purchase_orange;
}

switch(FEAT_TRAINS, SELF, switch_pbk32800_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_KUANKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_WHITE), 
                                     string(STR_COLOUR_RED)
                                     )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    3: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
    4: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_pbk32800) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_PBK32800);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1967, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               20;
        cargo_allow_refit:            [MAIL];
        dual_headed:                  0;
        weight:                       40 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_MAIL_LUG),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 20;
  cargo_subtype_text: switch_pbk32800_subtype_text;
  default: switch_pbk32800_livery;
  purchase: switch_pbk32800_purchase;
  }
}

spriteset(spriteset_pbk32850_light_blue, "gfx/pbk32850.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_pbk32850_orange, "gfx/pbk32850.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_pbk32850_blue, "gfx/pbk32850.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_pbk32850_cc, "gfx/pbk32850.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_pbk32850_purchase_light_blue, "gfx/pbk32850.png") {
    tmpl_vehicle_single(5, 87, 16, -25, -8)
}

spriteset(spriteset_pbk32850_purchase_orange, "gfx/pbk32850.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_pbk32850_year, current_year) {
    0..1979: spriteset_pbk32850_light_blue;
    spriteset_pbk32850_orange;
}

switch(FEAT_TRAINS, SELF, switch_pbk32850_livery, cargo_subtype) {
    0: switch_pbk32850_year;
    1: spriteset_pbk32850_light_blue;
    2: spriteset_pbk32850_orange;
    3: spriteset_pbk32850_blue;
    4: spriteset_pbk32850_cc;
}

switch(FEAT_TRAINS, SELF, switch_pbk32850_purchase, current_year) {
    0..1979: spriteset_pbk32850_purchase_light_blue;
    spriteset_pbk32850_purchase_orange;
}

switch(FEAT_TRAINS, SELF, switch_pbk32850_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_1F, string(STR_SUFFIX_YEARDEP)
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_WHITE), 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    3: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
    4: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_pbk32850) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_PBK32850);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1970, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        101 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               20;
        cargo_allow_refit:            [MAIL];
        dual_headed:                  0;
        weight:                       40 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_MAIL_LUG),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 20;
  cargo_subtype_text: switch_pbk32850_subtype_text;
  default: switch_pbk32850_livery;
  purchase: switch_pbk32850_purchase;
  }
}

spriteset(spriteset_pbk10400_orange, "gfx/pbk10400.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_pbk10400_cc, "gfx/pbk10400.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_pbk10400_purchase_orange, "gfx/pbk10400.png") {
    tmpl_vehicle_single(4, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_pbk10400_livery, cargo_subtype) {
    0: spriteset_pbk10400_orange;
    1: spriteset_pbk10400_cc;
}

switch(FEAT_TRAINS, SELF, switch_pbk10400_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    1: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_pbk10400) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_PBK10400);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(1995, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               20;
        cargo_allow_refit:            [MAIL];
        dual_headed:                  0;
        weight:                       40 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_MAIL_LUG),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 20;
  cargo_subtype_text: switch_pbk10400_subtype_text;
  default: switch_pbk10400_livery;
  purchase: spriteset_pbk10400_purchase_orange;
  }
}

spriteset(spriteset_pbk10500_orange, "gfx/pbk10500.png") {
    tmpl_vehicle_8_views(0, 0)
}

spriteset(spriteset_pbk10500_blue, "gfx/pbk10500.png") {
    tmpl_vehicle_8_views(1, 0)
}

spriteset(spriteset_pbk10500_black, "gfx/pbk10500.png") {
    tmpl_vehicle_8_views(2, 0)
}

spriteset(spriteset_pbk10500_cc, "gfx/pbk10500.png") {
    tmpl_vehicle_8_views(3, 0)
}

spriteset(spriteset_pbk10500_purchase_orange, "gfx/pbk10500.png") {
    tmpl_vehicle_single(6, 87, 16, -25, -8)
}

switch(FEAT_TRAINS, SELF, switch_pbk10500_livery, cargo_subtype) {
    0: spriteset_pbk10500_orange;
    1: spriteset_pbk10500_blue;
    2: spriteset_pbk10500_black;
    3: spriteset_pbk10500_cc;
}

switch(FEAT_TRAINS, SELF, switch_pbk10500_subtype_text, cargo_subtype) {
    0: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                  string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CHUKUANG),
                                    ),
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_CREAM), 
                                     string(STR_COLOUR_ORANGE)
                                     )
                                 );
    1: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                     )
                                 );
    2: return string(STR_CONCAT_2, string(STR_SUFFIX_TRA),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                     )
                                 );
    3: return string(STR_REFIT_CC);
       return CB_RESULT_NO_TEXT;
    }
/* Define the actual train */
item(FEAT_TRAINS, item_pbk10500) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_PBK10500);
        climates_available:           ALL_CLIMATES;
        introduction_date:            date(2001, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 45;
        reliability_decay:            20;
        cost_factor:                  20;
        running_cost_factor:          50; // Changed by callback
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        length:                       8;
        speed:                        111 km/h;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC);
        refit_cost:                   0; //refit costs don't apply to subcargo display
        track_type:                   NAAN; // from rail type table
        running_cost_base:            RUNNING_COST_NONE;
        cargo_capacity:               20;
        cargo_allow_refit:            [MAIL];
        dual_headed:                  0;
        weight:                       40 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics { // graphics for engine
  additional_text:  string(STR_CONCAT_3S, 
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_MAIL_LUG),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_TRA)
                    )
                  );
  cargo_capacity: return 20;
  cargo_subtype_text: switch_pbk10500_subtype_text;
  default: switch_pbk10500_livery;
  purchase: spriteset_pbk10500_purchase_orange;
  }
}
